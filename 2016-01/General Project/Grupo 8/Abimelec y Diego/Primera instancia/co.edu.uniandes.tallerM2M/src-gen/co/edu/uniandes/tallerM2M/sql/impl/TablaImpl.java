/**
 * generated by Xtext 2.9.1
 */
package co.edu.uniandes.tallerM2M.sql.impl;

import co.edu.uniandes.tallerM2M.sql.Columna;
import co.edu.uniandes.tallerM2M.sql.ForeignKey;
import co.edu.uniandes.tallerM2M.sql.Primary;
import co.edu.uniandes.tallerM2M.sql.SqlPackage;
import co.edu.uniandes.tallerM2M.sql.Tabla;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tabla</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link co.edu.uniandes.tallerM2M.sql.impl.TablaImpl#getName <em>Name</em>}</li>
 *   <li>{@link co.edu.uniandes.tallerM2M.sql.impl.TablaImpl#getColumnas <em>Columnas</em>}</li>
 *   <li>{@link co.edu.uniandes.tallerM2M.sql.impl.TablaImpl#getPrimarys <em>Primarys</em>}</li>
 *   <li>{@link co.edu.uniandes.tallerM2M.sql.impl.TablaImpl#getForeigns <em>Foreigns</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class TablaImpl extends MinimalEObjectImpl.Container implements Tabla
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getColumnas() <em>Columnas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumnas()
   * @generated
   * @ordered
   */
  protected EList<Columna> columnas;

  /**
   * The cached value of the '{@link #getPrimarys() <em>Primarys</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimarys()
   * @generated
   * @ordered
   */
  protected EList<Primary> primarys;

  /**
   * The cached value of the '{@link #getForeigns() <em>Foreigns</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForeigns()
   * @generated
   * @ordered
   */
  protected EList<ForeignKey> foreigns;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TablaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SqlPackage.Literals.TABLA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SqlPackage.TABLA__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Columna> getColumnas()
  {
    if (columnas == null)
    {
      columnas = new EObjectContainmentEList<Columna>(Columna.class, this, SqlPackage.TABLA__COLUMNAS);
    }
    return columnas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Primary> getPrimarys()
  {
    if (primarys == null)
    {
      primarys = new EObjectContainmentEList<Primary>(Primary.class, this, SqlPackage.TABLA__PRIMARYS);
    }
    return primarys;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ForeignKey> getForeigns()
  {
    if (foreigns == null)
    {
      foreigns = new EObjectContainmentEList<ForeignKey>(ForeignKey.class, this, SqlPackage.TABLA__FOREIGNS);
    }
    return foreigns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SqlPackage.TABLA__COLUMNAS:
        return ((InternalEList<?>)getColumnas()).basicRemove(otherEnd, msgs);
      case SqlPackage.TABLA__PRIMARYS:
        return ((InternalEList<?>)getPrimarys()).basicRemove(otherEnd, msgs);
      case SqlPackage.TABLA__FOREIGNS:
        return ((InternalEList<?>)getForeigns()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SqlPackage.TABLA__NAME:
        return getName();
      case SqlPackage.TABLA__COLUMNAS:
        return getColumnas();
      case SqlPackage.TABLA__PRIMARYS:
        return getPrimarys();
      case SqlPackage.TABLA__FOREIGNS:
        return getForeigns();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SqlPackage.TABLA__NAME:
        setName((String)newValue);
        return;
      case SqlPackage.TABLA__COLUMNAS:
        getColumnas().clear();
        getColumnas().addAll((Collection<? extends Columna>)newValue);
        return;
      case SqlPackage.TABLA__PRIMARYS:
        getPrimarys().clear();
        getPrimarys().addAll((Collection<? extends Primary>)newValue);
        return;
      case SqlPackage.TABLA__FOREIGNS:
        getForeigns().clear();
        getForeigns().addAll((Collection<? extends ForeignKey>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SqlPackage.TABLA__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SqlPackage.TABLA__COLUMNAS:
        getColumnas().clear();
        return;
      case SqlPackage.TABLA__PRIMARYS:
        getPrimarys().clear();
        return;
      case SqlPackage.TABLA__FOREIGNS:
        getForeigns().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SqlPackage.TABLA__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SqlPackage.TABLA__COLUMNAS:
        return columnas != null && !columnas.isEmpty();
      case SqlPackage.TABLA__PRIMARYS:
        return primarys != null && !primarys.isEmpty();
      case SqlPackage.TABLA__FOREIGNS:
        return foreigns != null && !foreigns.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //TablaImpl
