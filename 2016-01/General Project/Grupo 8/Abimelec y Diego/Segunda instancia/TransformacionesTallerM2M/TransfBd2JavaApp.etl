model DB driver EMF {path='SQL.ecore'};
model app driver EMF {path='mmJavaMinimalista.ecore'};

pre {
	"Inicio de la Tx".println();
	DB!Database.allInstances();
}

rule BD2App
transform t:DB!Database
to a:app!Application{
	--var packa = new app!Package;
	--a.package.add(packa);
	a.name = "Market Place App";
	a.package = t.tablas.equivalent();
} 

@lazy
rule Table2Class
transform t:DB!Tabla
to c:app!Class{
	c.name = t.name;
	c.structuredElements = t.columnas.equivalent();
	c.modifiers='public'.modifier();
	c.annotations = t.primarys.equivalent();
	c.annotations.add(t.getForeigns());
	
}

@lazy
rule Column2Atribute
transform t:DB!Columna
to j:app!Attribute{
	j.name=t.name;
	j.primitiveType=t.tipo.transformPrimitiveDataType();
	
}

@lazy
rule Primary2Annotations
transform t:DB!Primary
to j:app!Annotation{
	var nomPK = "";
	var tipoPK = "";
	var indice = 0;
	var param;
	j.name = "primary";
	for(pk in t.column.select(c|c.name<>"")){
		param = new app!KeyValue;
		nomPK = pk.name;
		tipoPK = pk.tipo;
		param.key = nomPK;
		param.value = tipoPK;
		j.parameters.add(param);
			
		indice = indice+1;
	}
}


operation DB!Tabla getForeigns(): app!Annotation{
	var nomFK = "";
	var referenceFK = ""; 
	var indice = 0;
	var param;
	var annotation = new app!Annotation;
	annotation.name = "foreign";
	for(fk in self.foreigns.select(c|c.size()>0)){
		param = new app!KeyValue;
		nomFK = fk.name;
		--referenceFK = fk.referenceTable.select(c|c.size()>0).name[0] + "("+fk.referenceColumn.select(c|c.size()>0).name[0]+")";
		referenceFK = fk.referenceTable.select(c|c.size()>0).name[0];
		param.key = nomFK;
		param.value = referenceFK;
		annotation.parameters.add(param);
		indice = indice+1;
	}
	return annotation;
}



operation String transformPrimitiveDataType(){
	if (self = 'int') {
		return app!PrimitiveDataType#INT;
	} 
	else if (self = 'varchar(255)') {
			return app!PrimitiveDataType#STRING;
	} 

}

operation String modifier(){
	if (self = 'public') {
		return app!Modifiers#PUBLIC;
	} 
	else if (self = 'private') {
			return app!Modifiers#PRIVATE;
	} 
}
