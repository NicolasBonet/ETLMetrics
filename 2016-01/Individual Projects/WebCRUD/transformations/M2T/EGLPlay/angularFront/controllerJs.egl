(function(){
  angular.module('invApp')
    .controller('[%= page.controller.name %]', [%= page.controller.name %]);

  [%= page.controller.name %].$inject = ['invData'];
	function [%= page.controller.name %](invData){
  		var vm = this;
  		vm.data = {};
    		
		//table
		invData.get[%= page.resource.name%]s(function(data){
			vm.data.lista = data;
		});

		//refs
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]    
		vm.data.selected[%= atribute.name.firstToUpperCase %]Option = {};
    
		invData.get[%= atribute.ref.name %]s(function(data){
			vm.data.[%= atribute.name %]s = data;
		});
[%
	}
%]

    vm.data.create = true;
    vm.data.detalle = {};
    
    
    vm.add[%= page.resource.name%] = function(){
		vm.data.create = true;
		vm.data.detalle = {};
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]    
		vm.data.selected[%= atribute.name.firstToUpperCase %]Option = {};[%
	}
%]
    
    };

    vm.edit[%= page.resource.name%] = function(detalle){
      vm.data.create = false;
      vm.data.detalle = angular.copy(detalle);    
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%] 
      vm.data.selected[%= atribute.name.firstToUpperCase %]Option = _.find(vm.data.[%= atribute.name %]s, function(data){
        return data.id === vm.data.detalle.[%= atribute.name %];
      });
[%
	}
%]
    };

		vm.crear[%= page.resource.name%] = function(){
			vm.data.create = false;
			var detalle = angular.copy(vm.data.detalle);
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]       
			detalle.[%= atribute.name %] = vm.data.selected[%= atribute.name.firstToUpperCase %]Option.id;[%
	}
%]      

			invData.add[%= page.resource.name %](detalle, function(detalle){
          		vm.data.lista.push(detalle);
			});

			vm.data.detalle = {};
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]    
			vm.data.selected[%= atribute.name.firstToUpperCase %]Option = {};[%
	}
%]

    };

		vm.update[%= page.resource.name%] = function(){
			vm.data.create = false;
			var detalle = angular.copy(vm.data.detalle);
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]       
			detalle.[%= atribute.name %] = vm.data.selected[%= atribute.name.firstToUpperCase %]Option.id;[%
	}
%]       

			invData.update[%= page.resource.name%](detalle, function(detalle){
				for(var i = 0; i < vm.data.lista.length; i++){
					if(vm.data.lista[i].id === detalle.id){
						vm.data.lista[i] = detalle;
						break;
					}
				}
			});

			vm.data.detalle = {};
[%
	for(atribute in page.resource.atributes.select(a | a.isKindOf(play!RefAtribute))) {
%]    
			vm.data.selected[%= atribute.name.firstToUpperCase %]Option = {};[%
	}
%]
    
    };

    vm.delete[%= page.resource.name%] = function(id){
      invData.delete[%= page.resource.name%](id, function(data){
        for(var i = 0; i < vm.data.lista.length; i++){
          if(vm.data.lista[i].id === id){
            vm.data.lista.splice(i, 1);
            break;
          }
        }
      });
    };

  }

})();
