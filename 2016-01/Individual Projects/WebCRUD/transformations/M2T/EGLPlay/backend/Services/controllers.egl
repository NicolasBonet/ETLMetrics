[%
	var pkatribute = resource.atributes.select(a|a.isTypeOf(PKAtribute)).at(0);
%]
package controllers.implementacion;

import com.fasterxml.jackson.databind.JsonNode;
import controllers.contratos.I[%=resource.name.firstToUpperCase()%];
import models.[%=resource.name.firstToUpperCase()%];
import play.db.jpa.Transactional;
import play.libs.Json;
import play.mvc.Controller;
import play.mvc.Result;

public class [%=resource.name.firstToUpperCase()%]sController extends Controller {
    private static I[%=resource.name.firstToUpperCase()%] [%=resource.name.firstToLowerCase()%]s = new [%=resource.name.firstToUpperCase()%]s();

    @Transactional
    public Result get[%=resource.name.firstToUpperCase()%]s(){
        return ok(Json.toJson([%=resource.name.firstToLowerCase()%]s.get[%=resource.name.firstToUpperCase()%]s()));
    }

[%
	/*Imprime metodos por Id*/
	for(atribute in resource.atributes.select(a|a.isTypeOf(PKAtribute))){%]
    @Transactional
    public Result get[%=resource.name.firstToUpperCase()%]ById([%=atribute.type%] [%=atribute.name.firstToLowerCase()%]){
        return ok(Json.toJson([%=resource.name.firstToLowerCase()%]s.get[%=resource.name.firstToUpperCase()%]ById([%=atribute.name.firstToLowerCase()%])));
    }
	[%}
	/*Imprime metodos por Referencia*/
	for(atribute in resource.atributes.select(a|a.isTypeOf(RefAtribute))){%]
    @Transactional
    public Result get[%=resource.name.firstToUpperCase()%]sBy[%=atribute.name.firstToUpperCase()%]([%=atribute.type%] [%=atribute.name.firstToLowerCase()%]){
        return ok(Json.toJson([%=resource.name.firstToLowerCase()%]s.get[%=resource.name.firstToUpperCase()%]sBy[%=atribute.name.firstToUpperCase()%]([%=atribute.name.firstToLowerCase()%])));
    }
	[%}
%]    

    @Transactional
    public Result save(){
        JsonNode json = request().body().asJson();
        JsonNode respuesta = Json.parse("{\"errorCode\":\"1\",\"desCode\":\"Error en [%=resource.name.firstToLowerCase()%]s\"}");
        [%=resource.name.firstToUpperCase()%] [%=resource.name.firstToLowerCase()%] = Json.fromJson(json,[%=resource.name.firstToUpperCase()%].class);
        if([%=resource.name.firstToLowerCase()%]!=null){
            [%=resource.name.firstToLowerCase()%]= [%=resource.name.firstToLowerCase()%]s.save([%=resource.name.firstToLowerCase()%]);
            respuesta=Json.toJson([%=resource.name.firstToLowerCase()%]);
        }
        return ok(Json.toJson(respuesta));
    
    }

    @Transactional
    public Result update([%=pkatribute.type%] [%=pkatribute.name.firstToLowerCase()%]){
        JsonNode json = request().body().asJson();
        JsonNode respuesta = Json.parse("{\"errorCode\":\"1\",\"desCode\":\"Error en [%=resource.name.firstToLowerCase()%]s\"}");
        [%=resource.name.firstToUpperCase()%] [%=resource.name.firstToLowerCase()%] = Json.fromJson(json,[%=resource.name.firstToUpperCase()%].class);
        [%=resource.name.firstToLowerCase()%].set[%=pkatribute.name.firstToUpperCase()%]([%=pkatribute.name.firstToLowerCase()%]);
        if([%=resource.name.firstToLowerCase()%]!=null){
            [%=resource.name.firstToLowerCase()%]= [%=resource.name.firstToLowerCase()%]s.update([%=resource.name.firstToLowerCase()%]);
            respuesta=Json.toJson([%=resource.name.firstToLowerCase()%]);
        }
        return ok(respuesta);
    
    }

[%
	/*Imprime metodo detele por Id*/
	for(atribute in resource.atributes.select(a|a.isTypeOf(PKAtribute))){%]
    @Transactional
    public Result  delete([%=atribute.type%] [%=atribute.name.firstToLowerCase()%]){
        JsonNode respuesta = Json.parse("{\"errorCode\":\"1\",\"desCode\":\"Error en [%=resource.name.firstToLowerCase()%]s\"}");
        [%=resource.name.firstToUpperCase()%] [%=resource.name.firstToLowerCase()%]= [%=resource.name.firstToLowerCase()%]s.delete([%=atribute.name.firstToLowerCase()%]);
        if([%=resource.name.firstToLowerCase()%]!=null){
            respuesta=Json.toJson([%=resource.name.firstToLowerCase()%]);
        }
        return ok(respuesta);
    
    }
	[%}
%]    



}