/**
 * generated by Xtext 2.9.1
 */
package org.uniandes.edu.co.sqlCrud.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.uniandes.edu.co.sqlCrud.ColumnTipoEnum;
import org.uniandes.edu.co.sqlCrud.Columna;
import org.uniandes.edu.co.sqlCrud.SqlCrudPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Columna</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.uniandes.edu.co.sqlCrud.impl.ColumnaImpl#getNombre <em>Nombre</em>}</li>
 *   <li>{@link org.uniandes.edu.co.sqlCrud.impl.ColumnaImpl#getTipo <em>Tipo</em>}</li>
 *   <li>{@link org.uniandes.edu.co.sqlCrud.impl.ColumnaImpl#getNotnullable <em>Notnullable</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ColumnaImpl extends MinimalEObjectImpl.Container implements Columna
{
  /**
   * The default value of the '{@link #getNombre() <em>Nombre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombre()
   * @generated
   * @ordered
   */
  protected static final String NOMBRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNombre() <em>Nombre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombre()
   * @generated
   * @ordered
   */
  protected String nombre = NOMBRE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTipo() <em>Tipo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo()
   * @generated
   * @ordered
   */
  protected ColumnTipoEnum tipo;

  /**
   * The default value of the '{@link #getNotnullable() <em>Notnullable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNotnullable()
   * @generated
   * @ordered
   */
  protected static final String NOTNULLABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNotnullable() <em>Notnullable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNotnullable()
   * @generated
   * @ordered
   */
  protected String notnullable = NOTNULLABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ColumnaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SqlCrudPackage.Literals.COLUMNA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNombre()
  {
    return nombre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNombre(String newNombre)
  {
    String oldNombre = nombre;
    nombre = newNombre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SqlCrudPackage.COLUMNA__NOMBRE, oldNombre, nombre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ColumnTipoEnum getTipo()
  {
    return tipo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTipo(ColumnTipoEnum newTipo, NotificationChain msgs)
  {
    ColumnTipoEnum oldTipo = tipo;
    tipo = newTipo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SqlCrudPackage.COLUMNA__TIPO, oldTipo, newTipo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTipo(ColumnTipoEnum newTipo)
  {
    if (newTipo != tipo)
    {
      NotificationChain msgs = null;
      if (tipo != null)
        msgs = ((InternalEObject)tipo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SqlCrudPackage.COLUMNA__TIPO, null, msgs);
      if (newTipo != null)
        msgs = ((InternalEObject)newTipo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SqlCrudPackage.COLUMNA__TIPO, null, msgs);
      msgs = basicSetTipo(newTipo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SqlCrudPackage.COLUMNA__TIPO, newTipo, newTipo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNotnullable()
  {
    return notnullable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNotnullable(String newNotnullable)
  {
    String oldNotnullable = notnullable;
    notnullable = newNotnullable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SqlCrudPackage.COLUMNA__NOTNULLABLE, oldNotnullable, notnullable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SqlCrudPackage.COLUMNA__TIPO:
        return basicSetTipo(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SqlCrudPackage.COLUMNA__NOMBRE:
        return getNombre();
      case SqlCrudPackage.COLUMNA__TIPO:
        return getTipo();
      case SqlCrudPackage.COLUMNA__NOTNULLABLE:
        return getNotnullable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SqlCrudPackage.COLUMNA__NOMBRE:
        setNombre((String)newValue);
        return;
      case SqlCrudPackage.COLUMNA__TIPO:
        setTipo((ColumnTipoEnum)newValue);
        return;
      case SqlCrudPackage.COLUMNA__NOTNULLABLE:
        setNotnullable((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SqlCrudPackage.COLUMNA__NOMBRE:
        setNombre(NOMBRE_EDEFAULT);
        return;
      case SqlCrudPackage.COLUMNA__TIPO:
        setTipo((ColumnTipoEnum)null);
        return;
      case SqlCrudPackage.COLUMNA__NOTNULLABLE:
        setNotnullable(NOTNULLABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SqlCrudPackage.COLUMNA__NOMBRE:
        return NOMBRE_EDEFAULT == null ? nombre != null : !NOMBRE_EDEFAULT.equals(nombre);
      case SqlCrudPackage.COLUMNA__TIPO:
        return tipo != null;
      case SqlCrudPackage.COLUMNA__NOTNULLABLE:
        return NOTNULLABLE_EDEFAULT == null ? notnullable != null : !NOTNULLABLE_EDEFAULT.equals(notnullable);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (nombre: ");
    result.append(nombre);
    result.append(", notnullable: ");
    result.append(notnullable);
    result.append(')');
    return result.toString();
  }

} //ColumnaImpl
