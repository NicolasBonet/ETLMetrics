/*
 * generated by Xtext 2.9.1
 */
grammar InternalSqlCrud;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.uniandes.edu.co.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.uniandes.edu.co.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.uniandes.edu.co.services.SqlCrudGrammarAccess;

}
@parser::members {
	private SqlCrudGrammarAccess grammarAccess;

	public void setGrammarAccess(SqlCrudGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDatabase
entryRuleDatabase
:
{ before(grammarAccess.getDatabaseRule()); }
	 ruleDatabase
{ after(grammarAccess.getDatabaseRule()); } 
	 EOF 
;

// Rule Database
ruleDatabase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatabaseAccess().getGroup()); }
		(rule__Database__Group__0)
		{ after(grammarAccess.getDatabaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryKey
entryRulePrimaryKey
:
{ before(grammarAccess.getPrimaryKeyRule()); }
	 rulePrimaryKey
{ after(grammarAccess.getPrimaryKeyRule()); } 
	 EOF 
;

// Rule PrimaryKey
rulePrimaryKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getGroup()); }
		(rule__PrimaryKey__Group__0)
		{ after(grammarAccess.getPrimaryKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeignKey
entryRuleForeignKey
:
{ before(grammarAccess.getForeignKeyRule()); }
	 ruleForeignKey
{ after(grammarAccess.getForeignKeyRule()); } 
	 EOF 
;

// Rule ForeignKey
ruleForeignKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeignKeyAccess().getGroup()); }
		(rule__ForeignKey__Group__0)
		{ after(grammarAccess.getForeignKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumna
entryRuleColumna
:
{ before(grammarAccess.getColumnaRule()); }
	 ruleColumna
{ after(grammarAccess.getColumnaRule()); } 
	 EOF 
;

// Rule Columna
ruleColumna 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnaAccess().getGroup()); }
		(rule__Columna__Group__0)
		{ after(grammarAccess.getColumnaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnTipoEnum
entryRuleColumnTipoEnum
:
{ before(grammarAccess.getColumnTipoEnumRule()); }
	 ruleColumnTipoEnum
{ after(grammarAccess.getColumnTipoEnumRule()); } 
	 EOF 
;

// Rule ColumnTipoEnum
ruleColumnTipoEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getAlternatives()); }
		(rule__ColumnTipoEnum__Alternatives)
		{ after(grammarAccess.getColumnTipoEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarchar
entryRuleVarchar
:
{ before(grammarAccess.getVarcharRule()); }
	 ruleVarchar
{ after(grammarAccess.getVarcharRule()); } 
	 EOF 
;

// Rule Varchar
ruleVarchar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarcharAccess().getGroup()); }
		(rule__Varchar__Group__0)
		{ after(grammarAccess.getVarcharAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinary
entryRuleBinary
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryAccess().getGroup()); }
		(rule__Binary__Group__0)
		{ after(grammarAccess.getBinaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarBinary
entryRuleVarBinary
:
{ before(grammarAccess.getVarBinaryRule()); }
	 ruleVarBinary
{ after(grammarAccess.getVarBinaryRule()); } 
	 EOF 
;

// Rule VarBinary
ruleVarBinary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarBinaryAccess().getGroup()); }
		(rule__VarBinary__Group__0)
		{ after(grammarAccess.getVarBinaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getInttAssignment_0()); }
		(rule__ColumnTipoEnum__InttAssignment_0)
		{ after(grammarAccess.getColumnTipoEnumAccess().getInttAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getVarchartAssignment_1()); }
		(rule__ColumnTipoEnum__VarchartAssignment_1)
		{ after(grammarAccess.getColumnTipoEnumAccess().getVarchartAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getSmallinttAssignment_2()); }
		(rule__ColumnTipoEnum__SmallinttAssignment_2)
		{ after(grammarAccess.getColumnTipoEnumAccess().getSmallinttAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBiginttAssignment_3()); }
		(rule__ColumnTipoEnum__BiginttAssignment_3)
		{ after(grammarAccess.getColumnTipoEnumAccess().getBiginttAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBooleantAssignment_4()); }
		(rule__ColumnTipoEnum__BooleantAssignment_4)
		{ after(grammarAccess.getColumnTipoEnumAccess().getBooleantAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getRealtAssignment_5()); }
		(rule__ColumnTipoEnum__RealtAssignment_5)
		{ after(grammarAccess.getColumnTipoEnumAccess().getRealtAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getFloattAssignment_6()); }
		(rule__ColumnTipoEnum__FloattAssignment_6)
		{ after(grammarAccess.getColumnTipoEnumAccess().getFloattAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBinarytAssignment_7()); }
		(rule__ColumnTipoEnum__BinarytAssignment_7)
		{ after(grammarAccess.getColumnTipoEnumAccess().getBinarytAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getVarbinarytAssignment_8()); }
		(rule__ColumnTipoEnum__VarbinarytAssignment_8)
		{ after(grammarAccess.getColumnTipoEnumAccess().getVarbinarytAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getDatetAssignment_9()); }
		(rule__ColumnTipoEnum__DatetAssignment_9)
		{ after(grammarAccess.getColumnTipoEnumAccess().getDatetAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getTimestamptAssignment_10()); }
		(rule__ColumnTipoEnum__TimestamptAssignment_10)
		{ after(grammarAccess.getColumnTipoEnumAccess().getTimestamptAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getMultisettAssignment_11()); }
		(rule__ColumnTipoEnum__MultisettAssignment_11)
		{ after(grammarAccess.getColumnTipoEnumAccess().getMultisettAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getXmltAssignment_12()); }
		(rule__ColumnTipoEnum__XmltAssignment_12)
		{ after(grammarAccess.getColumnTipoEnumAccess().getXmltAssignment_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Database__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Database__Group__0__Impl
	rule__Database__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Database__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatabaseAccess().getDatabaseAction_0()); }
	()
	{ after(grammarAccess.getDatabaseAccess().getDatabaseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Database__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Database__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Database__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDatabaseAccess().getTablesAssignment_1()); }
		(rule__Database__TablesAssignment_1)
		{ after(grammarAccess.getDatabaseAccess().getTablesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getDatabaseAccess().getTablesAssignment_1()); }
		(rule__Database__TablesAssignment_1)*
		{ after(grammarAccess.getDatabaseAccess().getTablesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCREATETerminalRuleCall_0()); }
	RULE_CREATE
	{ after(grammarAccess.getTableAccess().getCREATETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSpaceKeyword_1()); }
	' '
	{ after(grammarAccess.getTableAccess().getSpaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTABLATerminalRuleCall_2()); }
	RULE_TABLA
	{ after(grammarAccess.getTableAccess().getTABLATerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSpaceKeyword_3()); }
	' '
	{ after(grammarAccess.getTableAccess().getSpaceKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNombreAssignment_4()); }
	(rule__Table__NombreAssignment_4)
	{ after(grammarAccess.getTableAccess().getNombreAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSpaceKeyword_5()); }
	(' ')?
	{ after(grammarAccess.getTableAccess().getSpaceKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLPARTerminalRuleCall_6()); }
	RULE_LPAR
	{ after(grammarAccess.getTableAccess().getLPARTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__7__Impl
	rule__Table__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTableAccess().getColumnasAssignment_7()); }
		(rule__Table__ColumnasAssignment_7)
		{ after(grammarAccess.getTableAccess().getColumnasAssignment_7()); }
	)
	(
		{ before(grammarAccess.getTableAccess().getColumnasAssignment_7()); }
		(rule__Table__ColumnasAssignment_7)*
		{ after(grammarAccess.getTableAccess().getColumnasAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__8__Impl
	rule__Table__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getPrkeyAssignment_8()); }
	(rule__Table__PrkeyAssignment_8)
	{ after(grammarAccess.getTableAccess().getPrkeyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__9__Impl
	rule__Table__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getForkeysAssignment_9()); }
	(rule__Table__ForkeysAssignment_9)*
	{ after(grammarAccess.getTableAccess().getForkeysAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__10__Impl
	rule__Table__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRPARTerminalRuleCall_10()); }
	RULE_RPAR
	{ after(grammarAccess.getTableAccess().getRPARTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSpaceKeyword_11()); }
	(' ')?
	{ after(grammarAccess.getTableAccess().getSpaceKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__0__Impl
	rule__PrimaryKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getPKTerminalRuleCall_0()); }
	RULE_PK
	{ after(grammarAccess.getPrimaryKeyAccess().getPKTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__1__Impl
	rule__PrimaryKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getSpaceKeyword_1()); }
	(' ')?
	{ after(grammarAccess.getPrimaryKeyAccess().getSpaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__2__Impl
	rule__PrimaryKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getLPARTerminalRuleCall_2()); }
	RULE_LPAR
	{ after(grammarAccess.getPrimaryKeyAccess().getLPARTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__3__Impl
	rule__PrimaryKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getColsAssignment_3()); }
	(rule__PrimaryKey__ColsAssignment_3)
	{ after(grammarAccess.getPrimaryKeyAccess().getColsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__4__Impl
	rule__PrimaryKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getGroup_4()); }
	(rule__PrimaryKey__Group_4__0)*
	{ after(grammarAccess.getPrimaryKeyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getRPARTerminalRuleCall_5()); }
	RULE_RPAR
	{ after(grammarAccess.getPrimaryKeyAccess().getRPARTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_4__0__Impl
	rule__PrimaryKey__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getCOMMATerminalRuleCall_4_0()); }
	RULE_COMMA
	{ after(grammarAccess.getPrimaryKeyAccess().getCOMMATerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_4__1__Impl
	rule__PrimaryKey__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getSpaceKeyword_4_1()); }
	(' ')?
	{ after(grammarAccess.getPrimaryKeyAccess().getSpaceKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getColsAssignment_4_2()); }
	(rule__PrimaryKey__ColsAssignment_4_2)
	{ after(grammarAccess.getPrimaryKeyAccess().getColsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__0__Impl
	rule__ForeignKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
	{ after(grammarAccess.getForeignKeyAccess().getCOMMATerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__1__Impl
	rule__ForeignKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_1()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__2__Impl
	rule__ForeignKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getFKTerminalRuleCall_2()); }
	RULE_FK
	{ after(grammarAccess.getForeignKeyAccess().getFKTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__3__Impl
	rule__ForeignKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_3()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__4__Impl
	rule__ForeignKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getLPARTerminalRuleCall_4()); }
	RULE_LPAR
	{ after(grammarAccess.getForeignKeyAccess().getLPARTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__5__Impl
	rule__ForeignKey__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_5()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__6__Impl
	rule__ForeignKey__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getColumnAssignment_6()); }
	(rule__ForeignKey__ColumnAssignment_6)
	{ after(grammarAccess.getForeignKeyAccess().getColumnAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__7__Impl
	rule__ForeignKey__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRPARTerminalRuleCall_7()); }
	RULE_RPAR
	{ after(grammarAccess.getForeignKeyAccess().getRPARTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__8__Impl
	rule__ForeignKey__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_8()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__9__Impl
	rule__ForeignKey__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getREFERENCESTerminalRuleCall_9()); }
	RULE_REFERENCES
	{ after(grammarAccess.getForeignKeyAccess().getREFERENCESTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__10__Impl
	rule__ForeignKey__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_10()); }
	' '
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__11__Impl
	rule__ForeignKey__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getReferencetabAssignment_11()); }
	(rule__ForeignKey__ReferencetabAssignment_11)
	{ after(grammarAccess.getForeignKeyAccess().getReferencetabAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__12__Impl
	rule__ForeignKey__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_12()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__13__Impl
	rule__ForeignKey__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getLPARTerminalRuleCall_13()); }
	RULE_LPAR
	{ after(grammarAccess.getForeignKeyAccess().getLPARTerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__14__Impl
	rule__ForeignKey__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_14()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__15__Impl
	rule__ForeignKey__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getReferencecolAssignment_15()); }
	(rule__ForeignKey__ReferencecolAssignment_15)
	{ after(grammarAccess.getForeignKeyAccess().getReferencecolAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__16__Impl
	rule__ForeignKey__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRPARTerminalRuleCall_16()); }
	RULE_RPAR
	{ after(grammarAccess.getForeignKeyAccess().getRPARTerminalRuleCall_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getSpaceKeyword_17()); }
	(' ')?
	{ after(grammarAccess.getForeignKeyAccess().getSpaceKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Columna__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group__0__Impl
	rule__Columna__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getNombreAssignment_0()); }
	(rule__Columna__NombreAssignment_0)
	{ after(grammarAccess.getColumnaAccess().getNombreAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group__1__Impl
	rule__Columna__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getSpaceKeyword_1()); }
	' '
	{ after(grammarAccess.getColumnaAccess().getSpaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group__2__Impl
	rule__Columna__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getTipoAssignment_2()); }
	(rule__Columna__TipoAssignment_2)
	{ after(grammarAccess.getColumnaAccess().getTipoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group__3__Impl
	rule__Columna__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getGroup_3()); }
	(rule__Columna__Group_3__0)?
	{ after(grammarAccess.getColumnaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getCOMMATerminalRuleCall_4()); }
	RULE_COMMA
	{ after(grammarAccess.getColumnaAccess().getCOMMATerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Columna__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group_3__0__Impl
	rule__Columna__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getSpaceKeyword_3_0()); }
	' '
	{ after(grammarAccess.getColumnaAccess().getSpaceKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Columna__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnaAccess().getNotnullableAssignment_3_1()); }
	(rule__Columna__NotnullableAssignment_3_1)
	{ after(grammarAccess.getColumnaAccess().getNotnullableAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varchar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varchar__Group__0__Impl
	rule__Varchar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarcharAccess().getVARCHTerminalRuleCall_0()); }
	RULE_VARCH
	{ after(grammarAccess.getVarcharAccess().getVARCHTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varchar__Group__1__Impl
	rule__Varchar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarcharAccess().getLPARTerminalRuleCall_1()); }
	RULE_LPAR
	{ after(grammarAccess.getVarcharAccess().getLPARTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varchar__Group__2__Impl
	rule__Varchar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarcharAccess().getMaxAssignment_2()); }
	(rule__Varchar__MaxAssignment_2)
	{ after(grammarAccess.getVarcharAccess().getMaxAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varchar__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarcharAccess().getRPARTerminalRuleCall_3()); }
	RULE_RPAR
	{ after(grammarAccess.getVarcharAccess().getRPARTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getBINARYKeyword_0()); }
	'BINARY'
	{ after(grammarAccess.getBinaryAccess().getBINARYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__1__Impl
	rule__Binary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getLPARTerminalRuleCall_1()); }
	RULE_LPAR
	{ after(grammarAccess.getBinaryAccess().getLPARTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__2__Impl
	rule__Binary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getMaxAssignment_2()); }
	(rule__Binary__MaxAssignment_2)
	{ after(grammarAccess.getBinaryAccess().getMaxAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryAccess().getRPARTerminalRuleCall_3()); }
	RULE_RPAR
	{ after(grammarAccess.getBinaryAccess().getRPARTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarBinary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarBinary__Group__0__Impl
	rule__VarBinary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarBinaryAccess().getVARBINARYKeyword_0()); }
	'VARBINARY'
	{ after(grammarAccess.getVarBinaryAccess().getVARBINARYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarBinary__Group__1__Impl
	rule__VarBinary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarBinaryAccess().getLPARTerminalRuleCall_1()); }
	RULE_LPAR
	{ after(grammarAccess.getVarBinaryAccess().getLPARTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarBinary__Group__2__Impl
	rule__VarBinary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarBinaryAccess().getMaxAssignment_2()); }
	(rule__VarBinary__MaxAssignment_2)
	{ after(grammarAccess.getVarBinaryAccess().getMaxAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarBinary__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarBinaryAccess().getRPARTerminalRuleCall_3()); }
	RULE_RPAR
	{ after(grammarAccess.getVarBinaryAccess().getRPARTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Database__TablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatabaseAccess().getTablesTableParserRuleCall_1_0()); }
		ruleTable
		{ after(grammarAccess.getDatabaseAccess().getTablesTableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NombreAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNombreNOMBRETerminalRuleCall_4_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getTableAccess().getNombreNOMBRETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnasAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnasColumnaParserRuleCall_7_0()); }
		ruleColumna
		{ after(grammarAccess.getTableAccess().getColumnasColumnaParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__PrkeyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getPrkeyPrimaryKeyParserRuleCall_8_0()); }
		rulePrimaryKey
		{ after(grammarAccess.getTableAccess().getPrkeyPrimaryKeyParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ForkeysAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getForkeysForeignKeyParserRuleCall_9_0()); }
		ruleForeignKey
		{ after(grammarAccess.getTableAccess().getForkeysForeignKeyParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__ColsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getColsNOMBRETerminalRuleCall_3_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getPrimaryKeyAccess().getColsNOMBRETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__ColsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getColsNOMBRETerminalRuleCall_4_2_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getPrimaryKeyAccess().getColsNOMBRETerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ColumnAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getColumnNOMBRETerminalRuleCall_6_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getForeignKeyAccess().getColumnNOMBRETerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ReferencetabAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getReferencetabNOMBRETerminalRuleCall_11_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getForeignKeyAccess().getReferencetabNOMBRETerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ReferencecolAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getReferencecolNOMBRETerminalRuleCall_15_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getForeignKeyAccess().getReferencecolNOMBRETerminalRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__NombreAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnaAccess().getNombreNOMBRETerminalRuleCall_0_0()); }
		RULE_NOMBRE
		{ after(grammarAccess.getColumnaAccess().getNombreNOMBRETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__TipoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnaAccess().getTipoColumnTipoEnumParserRuleCall_2_0()); }
		ruleColumnTipoEnum
		{ after(grammarAccess.getColumnaAccess().getTipoColumnTipoEnumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Columna__NotnullableAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnaAccess().getNotnullableNOTNULLTerminalRuleCall_3_1_0()); }
		RULE_NOTNULL
		{ after(grammarAccess.getColumnaAccess().getNotnullableNOTNULLTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__InttAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getInttTIPOINTTerminalRuleCall_0_0()); }
		RULE_TIPOINT
		{ after(grammarAccess.getColumnTipoEnumAccess().getInttTIPOINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__VarchartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getVarchartVarcharParserRuleCall_1_0()); }
		ruleVarchar
		{ after(grammarAccess.getColumnTipoEnumAccess().getVarchartVarcharParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__SmallinttAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getSmallinttSMALLINTKeyword_2_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getSmallinttSMALLINTKeyword_2_0()); }
			'SMALLINT'
			{ after(grammarAccess.getColumnTipoEnumAccess().getSmallinttSMALLINTKeyword_2_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getSmallinttSMALLINTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__BiginttAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBiginttBIGINTKeyword_3_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getBiginttBIGINTKeyword_3_0()); }
			'BIGINT'
			{ after(grammarAccess.getColumnTipoEnumAccess().getBiginttBIGINTKeyword_3_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getBiginttBIGINTKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__BooleantAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBooleantBOOLEANKeyword_4_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getBooleantBOOLEANKeyword_4_0()); }
			'BOOLEAN'
			{ after(grammarAccess.getColumnTipoEnumAccess().getBooleantBOOLEANKeyword_4_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getBooleantBOOLEANKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__RealtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getRealtREALKeyword_5_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getRealtREALKeyword_5_0()); }
			'REAL'
			{ after(grammarAccess.getColumnTipoEnumAccess().getRealtREALKeyword_5_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getRealtREALKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__FloattAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getFloattFLOATKeyword_6_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getFloattFLOATKeyword_6_0()); }
			'FLOAT'
			{ after(grammarAccess.getColumnTipoEnumAccess().getFloattFLOATKeyword_6_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getFloattFLOATKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__BinarytAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getBinarytBinaryParserRuleCall_7_0()); }
		ruleBinary
		{ after(grammarAccess.getColumnTipoEnumAccess().getBinarytBinaryParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__VarbinarytAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getVarbinarytVarBinaryParserRuleCall_8_0()); }
		ruleVarBinary
		{ after(grammarAccess.getColumnTipoEnumAccess().getVarbinarytVarBinaryParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__DatetAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getDatetDATEKeyword_9_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getDatetDATEKeyword_9_0()); }
			'DATE'
			{ after(grammarAccess.getColumnTipoEnumAccess().getDatetDATEKeyword_9_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getDatetDATEKeyword_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__TimestamptAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getTimestamptTIMESTAMPKeyword_10_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getTimestamptTIMESTAMPKeyword_10_0()); }
			'TIMESTAMP'
			{ after(grammarAccess.getColumnTipoEnumAccess().getTimestamptTIMESTAMPKeyword_10_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getTimestamptTIMESTAMPKeyword_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__MultisettAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getMultisettMULTISETKeyword_11_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getMultisettMULTISETKeyword_11_0()); }
			'MULTISET'
			{ after(grammarAccess.getColumnTipoEnumAccess().getMultisettMULTISETKeyword_11_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getMultisettMULTISETKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTipoEnum__XmltAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTipoEnumAccess().getXmltXMLKeyword_12_0()); }
		(
			{ before(grammarAccess.getColumnTipoEnumAccess().getXmltXMLKeyword_12_0()); }
			'XML'
			{ after(grammarAccess.getColumnTipoEnumAccess().getXmltXMLKeyword_12_0()); }
		)
		{ after(grammarAccess.getColumnTipoEnumAccess().getXmltXMLKeyword_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varchar__MaxAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarcharAccess().getMaxENTEROTerminalRuleCall_2_0()); }
		RULE_ENTERO
		{ after(grammarAccess.getVarcharAccess().getMaxENTEROTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__MaxAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryAccess().getMaxENTEROTerminalRuleCall_2_0()); }
		RULE_ENTERO
		{ after(grammarAccess.getBinaryAccess().getMaxENTEROTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBinary__MaxAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarBinaryAccess().getMaxENTEROTerminalRuleCall_2_0()); }
		RULE_ENTERO
		{ after(grammarAccess.getVarBinaryAccess().getMaxENTEROTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_CREATE : 'CREATE';

RULE_TABLA : 'TABLE';

RULE_LPAR : '(';

RULE_RPAR : ')';

RULE_COMMA : ',';

RULE_PK : 'PRIMARY KEY';

RULE_FK : 'FOREIGN KEY';

RULE_REFERENCES : 'REFERENCES';

RULE_NOTNULL : 'NOT NULL';

RULE_VARCH : ('VARCHAR'|'varchar');

RULE_TIPOINT : ('INT'|'int');

RULE_ENTERO : ('0'..'9')+;

RULE_NOMBRE : ('A'..'Z'|'a'..'z'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
