/*
 * generated by Xtext 2.9.1
 */
package org.uniandes.xtext.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes
import org.uniandes.xtext.sQL.ForeignKey
import org.uniandes.xtext.sQL.Table

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class SQLScopeProvider extends AbstractSQLScopeProvider {

	override public IScope getScope(EObject context, EReference reference) {	
		if (context instanceof ForeignKey && reference.name == "columnsRef") {
		 	for(var i = 0; i < context.eContainer.eContainer.eContents.size(); i++) {
		 	 	if ((context.eContainer.eContainer.eContents.get(i) as Table).name == (context as ForeignKey).tableRef.name) {
					return Scopes::scopeFor((context.eContainer.eContainer.eContents.get(i) as Table).column);
				}
		 	 }
		 	 return null;
		 } else {	
			return super.getScope(context, reference)
		}
	}

}