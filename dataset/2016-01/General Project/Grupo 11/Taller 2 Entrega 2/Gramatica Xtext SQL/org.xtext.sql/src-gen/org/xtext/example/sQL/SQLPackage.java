/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.sQL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.sQL.SQLFactory
 * @model kind="package"
 * @generated
 */
public interface SQLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "sQL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://uniandes.edu.co/sqlCrud";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "sQL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SQLPackage eINSTANCE = org.xtext.example.sQL.impl.SQLPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.impl.DataBaseImpl <em>Data Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.impl.DataBaseImpl
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getDataBase()
   * @generated
   */
  int DATA_BASE = 0;

  /**
   * The feature id for the '<em><b>Tables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_BASE__TABLES = 0;

  /**
   * The number of structural features of the '<em>Data Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.impl.TableImpl <em>Table</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.impl.TableImpl
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getTable()
   * @generated
   */
  int TABLE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Columns</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE__COLUMNS = 1;

  /**
   * The feature id for the '<em><b>Primary Key</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE__PRIMARY_KEY = 2;

  /**
   * The feature id for the '<em><b>Foreignkeys</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE__FOREIGNKEYS = 3;

  /**
   * The number of structural features of the '<em>Table</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.impl.columnImpl <em>column</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.impl.columnImpl
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getcolumn()
   * @generated
   */
  int COLUMN = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__TYPE = 1;

  /**
   * The number of structural features of the '<em>column</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.impl.primaryKeyImpl <em>primary Key</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.impl.primaryKeyImpl
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getprimaryKey()
   * @generated
   */
  int PRIMARY_KEY = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_KEY__NAME = 0;

  /**
   * The number of structural features of the '<em>primary Key</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_KEY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.impl.foreignKeyImpl <em>foreign Key</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.impl.foreignKeyImpl
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getforeignKey()
   * @generated
   */
  int FOREIGN_KEY = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_KEY__NAME = 0;

  /**
   * The feature id for the '<em><b>Reftable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_KEY__REFTABLE = 1;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_KEY__REF = 2;

  /**
   * The number of structural features of the '<em>foreign Key</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREIGN_KEY_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.sQL.DataType <em>Data Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.sQL.DataType
   * @see org.xtext.example.sQL.impl.SQLPackageImpl#getDataType()
   * @generated
   */
  int DATA_TYPE = 5;


  /**
   * Returns the meta object for class '{@link org.xtext.example.sQL.DataBase <em>Data Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Data Base</em>'.
   * @see org.xtext.example.sQL.DataBase
   * @generated
   */
  EClass getDataBase();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.sQL.DataBase#getTables <em>Tables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tables</em>'.
   * @see org.xtext.example.sQL.DataBase#getTables()
   * @see #getDataBase()
   * @generated
   */
  EReference getDataBase_Tables();

  /**
   * Returns the meta object for class '{@link org.xtext.example.sQL.Table <em>Table</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Table</em>'.
   * @see org.xtext.example.sQL.Table
   * @generated
   */
  EClass getTable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.sQL.Table#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.sQL.Table#getName()
   * @see #getTable()
   * @generated
   */
  EAttribute getTable_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.sQL.Table#getColumns <em>Columns</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Columns</em>'.
   * @see org.xtext.example.sQL.Table#getColumns()
   * @see #getTable()
   * @generated
   */
  EReference getTable_Columns();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.sQL.Table#getPrimaryKey <em>Primary Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Primary Key</em>'.
   * @see org.xtext.example.sQL.Table#getPrimaryKey()
   * @see #getTable()
   * @generated
   */
  EReference getTable_PrimaryKey();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.sQL.Table#getForeignkeys <em>Foreignkeys</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Foreignkeys</em>'.
   * @see org.xtext.example.sQL.Table#getForeignkeys()
   * @see #getTable()
   * @generated
   */
  EReference getTable_Foreignkeys();

  /**
   * Returns the meta object for class '{@link org.xtext.example.sQL.column <em>column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>column</em>'.
   * @see org.xtext.example.sQL.column
   * @generated
   */
  EClass getcolumn();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.sQL.column#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.sQL.column#getName()
   * @see #getcolumn()
   * @generated
   */
  EAttribute getcolumn_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.sQL.column#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.example.sQL.column#getType()
   * @see #getcolumn()
   * @generated
   */
  EAttribute getcolumn_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.sQL.primaryKey <em>primary Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>primary Key</em>'.
   * @see org.xtext.example.sQL.primaryKey
   * @generated
   */
  EClass getprimaryKey();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.sQL.primaryKey#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.sQL.primaryKey#getName()
   * @see #getprimaryKey()
   * @generated
   */
  EAttribute getprimaryKey_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.sQL.foreignKey <em>foreign Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>foreign Key</em>'.
   * @see org.xtext.example.sQL.foreignKey
   * @generated
   */
  EClass getforeignKey();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.sQL.foreignKey#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.sQL.foreignKey#getName()
   * @see #getforeignKey()
   * @generated
   */
  EAttribute getforeignKey_Name();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.sQL.foreignKey#getReftable <em>Reftable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Reftable</em>'.
   * @see org.xtext.example.sQL.foreignKey#getReftable()
   * @see #getforeignKey()
   * @generated
   */
  EReference getforeignKey_Reftable();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.sQL.foreignKey#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see org.xtext.example.sQL.foreignKey#getRef()
   * @see #getforeignKey()
   * @generated
   */
  EReference getforeignKey_Ref();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.sQL.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Data Type</em>'.
   * @see org.xtext.example.sQL.DataType
   * @generated
   */
  EEnum getDataType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SQLFactory getSQLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.impl.DataBaseImpl <em>Data Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.impl.DataBaseImpl
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getDataBase()
     * @generated
     */
    EClass DATA_BASE = eINSTANCE.getDataBase();

    /**
     * The meta object literal for the '<em><b>Tables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DATA_BASE__TABLES = eINSTANCE.getDataBase_Tables();

    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.impl.TableImpl <em>Table</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.impl.TableImpl
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getTable()
     * @generated
     */
    EClass TABLE = eINSTANCE.getTable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TABLE__NAME = eINSTANCE.getTable_Name();

    /**
     * The meta object literal for the '<em><b>Columns</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TABLE__COLUMNS = eINSTANCE.getTable_Columns();

    /**
     * The meta object literal for the '<em><b>Primary Key</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TABLE__PRIMARY_KEY = eINSTANCE.getTable_PrimaryKey();

    /**
     * The meta object literal for the '<em><b>Foreignkeys</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TABLE__FOREIGNKEYS = eINSTANCE.getTable_Foreignkeys();

    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.impl.columnImpl <em>column</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.impl.columnImpl
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getcolumn()
     * @generated
     */
    EClass COLUMN = eINSTANCE.getcolumn();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__NAME = eINSTANCE.getcolumn_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__TYPE = eINSTANCE.getcolumn_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.impl.primaryKeyImpl <em>primary Key</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.impl.primaryKeyImpl
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getprimaryKey()
     * @generated
     */
    EClass PRIMARY_KEY = eINSTANCE.getprimaryKey();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRIMARY_KEY__NAME = eINSTANCE.getprimaryKey_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.impl.foreignKeyImpl <em>foreign Key</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.impl.foreignKeyImpl
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getforeignKey()
     * @generated
     */
    EClass FOREIGN_KEY = eINSTANCE.getforeignKey();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOREIGN_KEY__NAME = eINSTANCE.getforeignKey_Name();

    /**
     * The meta object literal for the '<em><b>Reftable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREIGN_KEY__REFTABLE = eINSTANCE.getforeignKey_Reftable();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREIGN_KEY__REF = eINSTANCE.getforeignKey_Ref();

    /**
     * The meta object literal for the '{@link org.xtext.example.sQL.DataType <em>Data Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.sQL.DataType
     * @see org.xtext.example.sQL.impl.SQLPackageImpl#getDataType()
     * @generated
     */
    EEnum DATA_TYPE = eINSTANCE.getDataType();

  }

} //SQLPackage
