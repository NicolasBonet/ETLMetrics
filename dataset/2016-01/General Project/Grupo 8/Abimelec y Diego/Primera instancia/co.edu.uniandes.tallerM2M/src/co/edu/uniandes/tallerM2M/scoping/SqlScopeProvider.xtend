/*
 * generated by Xtext 2.9.1
 */
package co.edu.uniandes.tallerM2M.scoping

import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference
import co.edu.uniandes.tallerM2M.sql.Columna;
import co.edu.uniandes.tallerM2M.sql.Tabla;
import co.edu.uniandes.tallerM2M.sql.ForeignKey;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider


class SqlScopeProvider extends AbstractDeclarativeScopeProvider {
 
override public IScope getScope(EObject context, EReference reference) {

if(context instanceof ForeignKey && reference.name != null && reference.name == "referenceColumn") {
 
	for (var i = 0; i < context.eContainer.eContainer.eContents.size(); i++) {
			println("-------->i "+i);
		if ((context.eContainer.eContainer.eContents.get(i) as Tabla).name == (context as ForeignKey).referenceTable.name) {
	 
			val columnas = (context.eContainer.eContainer.eContents.get(i) as Tabla).columnas;
	
			return Scopes.scopeFor(columnas);
		}
	}
return null;

} else {
	return super.getScope(context, reference);
	   }
	}
}