/*
 * generated by Xtext 2.9.2
 */
grammar InternalSqlCrudGenerator;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.uniandes.automatizacion.sql_crud_generator.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.uniandes.automatizacion.sql_crud_generator.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.uniandes.automatizacion.sql_crud_generator.services.SqlCrudGeneratorGrammarAccess;

}
@parser::members {
	private SqlCrudGeneratorGrammarAccess grammarAccess;

	public void setGrammarAccess(SqlCrudGeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSchema
entryRuleSchema
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup()); }
		(rule__Schema__Group__0)
		{ after(grammarAccess.getSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryKey
entryRulePrimaryKey
:
{ before(grammarAccess.getPrimaryKeyRule()); }
	 rulePrimaryKey
{ after(grammarAccess.getPrimaryKeyRule()); } 
	 EOF 
;

// Rule PrimaryKey
rulePrimaryKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getGroup()); }
		(rule__PrimaryKey__Group__0)
		{ after(grammarAccess.getPrimaryKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeignKey
entryRuleForeignKey
:
{ before(grammarAccess.getForeignKeyRule()); }
	 ruleForeignKey
{ after(grammarAccess.getForeignKeyRule()); } 
	 EOF 
;

// Rule ForeignKey
ruleForeignKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeignKeyAccess().getGroup()); }
		(rule__ForeignKey__Group__0)
		{ after(grammarAccess.getForeignKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ENUM_DATA_TYPE
ruleENUM_DATA_TYPE
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getAlternatives()); }
		(rule__ENUM_DATA_TYPE__Alternatives)
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENUM_DATA_TYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getCHARACTEREnumLiteralDeclaration_0()); }
		('CHARACTER')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getCHARACTEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARCHAREnumLiteralDeclaration_1()); }
		('VARCHAR')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARCHAREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARYINGEnumLiteralDeclaration_2()); }
		('VARYING')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARYINGEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBOOLEANEnumLiteralDeclaration_3()); }
		('BOOLEAN')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBOOLEANEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARBINARYEnumLiteralDeclaration_4()); }
		('VARBINARY')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARBINARYEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBINARYEnumLiteralDeclaration_5()); }
		('BINARY')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBINARYEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINTEGEREnumLiteralDeclaration_6()); }
		('INTEGER')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINTEGEREnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getSMALLINTEnumLiteralDeclaration_7()); }
		('SMALLINT')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getSMALLINTEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINTEnumLiteralDeclaration_8()); }
		('INT')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINTEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBIGINTEnumLiteralDeclaration_9()); }
		('BIGINT')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBIGINTEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getDECIMALEnumLiteralDeclaration_10()); }
		('DECIMAL')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getDECIMALEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getNUMERICEnumLiteralDeclaration_11()); }
		('NUMERIC')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getNUMERICEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getFLOATEnumLiteralDeclaration_12()); }
		('FLOAT')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getFLOATEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getREALEnumLiteralDeclaration_13()); }
		('REAL')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getREALEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getDATEEnumLiteralDeclaration_14()); }
		('DATE')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getDATEEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getTIMEEnumLiteralDeclaration_15()); }
		('TIME')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getTIMEEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getTIMESTAMPEnumLiteralDeclaration_16()); }
		('TIMESTAMP')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getTIMESTAMPEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINTERVALEnumLiteralDeclaration_17()); }
		('INTERVAL')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINTERVALEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getARRAYEnumLiteralDeclaration_18()); }
		('ARRAY')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getARRAYEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getMULTISETEnumLiteralDeclaration_19()); }
		('MULTISET')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getMULTISETEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getXMLEnumLiteralDeclaration_20()); }
		('XML')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getXMLEnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getCHARACTER_MEnumLiteralDeclaration_21()); }
		('character')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getCHARACTER_MEnumLiteralDeclaration_21()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARCHAR_MEnumLiteralDeclaration_22()); }
		('varchar')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARCHAR_MEnumLiteralDeclaration_22()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARYING_MEnumLiteralDeclaration_23()); }
		('varying')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARYING_MEnumLiteralDeclaration_23()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBOOLEAN_MEnumLiteralDeclaration_24()); }
		('boolean')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBOOLEAN_MEnumLiteralDeclaration_24()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getVARBINARY_MEnumLiteralDeclaration_25()); }
		('varbinary')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getVARBINARY_MEnumLiteralDeclaration_25()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBINARY_MEnumLiteralDeclaration_26()); }
		('binary')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBINARY_MEnumLiteralDeclaration_26()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINTEGER_MEnumLiteralDeclaration_27()); }
		('integer')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINTEGER_MEnumLiteralDeclaration_27()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getSMALLINT_MEnumLiteralDeclaration_28()); }
		('smallint')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getSMALLINT_MEnumLiteralDeclaration_28()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINT_MEnumLiteralDeclaration_29()); }
		('int')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINT_MEnumLiteralDeclaration_29()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getBIGINT_MEnumLiteralDeclaration_30()); }
		('bigint')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getBIGINT_MEnumLiteralDeclaration_30()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getDECIMAL_MEnumLiteralDeclaration_31()); }
		('decimal')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getDECIMAL_MEnumLiteralDeclaration_31()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getNUMERIC_MEnumLiteralDeclaration_32()); }
		('numeric')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getNUMERIC_MEnumLiteralDeclaration_32()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getFLOAT_MEnumLiteralDeclaration_33()); }
		('float')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getFLOAT_MEnumLiteralDeclaration_33()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getREAL_MEnumLiteralDeclaration_34()); }
		('real')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getREAL_MEnumLiteralDeclaration_34()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getDATE_MEnumLiteralDeclaration_35()); }
		('date')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getDATE_MEnumLiteralDeclaration_35()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getTIME_MEnumLiteralDeclaration_36()); }
		('time')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getTIME_MEnumLiteralDeclaration_36()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getTIMESTAMP_MEnumLiteralDeclaration_37()); }
		('timestamp')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getTIMESTAMP_MEnumLiteralDeclaration_37()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getINTERVAL_MEnumLiteralDeclaration_38()); }
		('interval')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getINTERVAL_MEnumLiteralDeclaration_38()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getARRAY_MEnumLiteralDeclaration_39()); }
		('array')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getARRAY_MEnumLiteralDeclaration_39()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getMULTISET_MEnumLiteralDeclaration_40()); }
		('multiset')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getMULTISET_MEnumLiteralDeclaration_40()); }
	)
	|
	(
		{ before(grammarAccess.getENUM_DATA_TYPEAccess().getXML_MEnumLiteralDeclaration_41()); }
		('xml')
		{ after(grammarAccess.getENUM_DATA_TYPEAccess().getXML_MEnumLiteralDeclaration_41()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getWCREATETerminalRuleCall_0()); }
	RULE_WCREATE
	{ after(grammarAccess.getSchemaAccess().getWCREATETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getWNEWTerminalRuleCall_1()); }
	RULE_WNEW
	{ after(grammarAccess.getSchemaAccess().getWNEWTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__2__Impl
	rule__Schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getWSCHEMATerminalRuleCall_2()); }
	RULE_WSCHEMA
	{ after(grammarAccess.getSchemaAccess().getWSCHEMATerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__3__Impl
	rule__Schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNameAssignment_3()); }
	(rule__Schema__NameAssignment_3)
	{ after(grammarAccess.getSchemaAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__4__Impl
	rule__Schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSEMICOLONTerminalRuleCall_4()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getSchemaAccess().getSEMICOLONTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getTablesAssignment_5()); }
	(rule__Schema__TablesAssignment_5)*
	{ after(grammarAccess.getSchemaAccess().getTablesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getWCREATETerminalRuleCall_0()); }
	RULE_WCREATE
	{ after(grammarAccess.getTableAccess().getWCREATETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getWTABLETerminalRuleCall_1()); }
	RULE_WTABLE
	{ after(grammarAccess.getTableAccess().getWTABLETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_2()); }
	(rule__Table__NameAssignment_2)
	{ after(grammarAccess.getTableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getPARENTHESIS_IZQTerminalRuleCall_3()); }
	RULE_PARENTHESIS_IZQ
	{ after(grammarAccess.getTableAccess().getPARENTHESIS_IZQTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_4()); }
	(rule__Table__ColumnsAssignment_4)*
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getPrimaryKeyAssignment_5()); }
	(rule__Table__PrimaryKeyAssignment_5)?
	{ after(grammarAccess.getTableAccess().getPrimaryKeyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getForeignsKeysAssignment_6()); }
	(rule__Table__ForeignsKeysAssignment_6)*
	{ after(grammarAccess.getTableAccess().getForeignsKeysAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getPARENTHESIS_DERTerminalRuleCall_7()); }
	RULE_PARENTHESIS_DER
	{ after(grammarAccess.getTableAccess().getPARENTHESIS_DERTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_0()); }
	(rule__Column__NameAssignment_0)
	{ after(grammarAccess.getColumnAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getDataTypeAssignment_1()); }
	(rule__Column__DataTypeAssignment_1)
	{ after(grammarAccess.getColumnAccess().getDataTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getGroup_2()); }
	(rule__Column__Group_2__0)?
	{ after(grammarAccess.getColumnAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getCOMATerminalRuleCall_3()); }
	(RULE_COMA)?
	{ after(grammarAccess.getColumnAccess().getCOMATerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_2__0__Impl
	rule__Column__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getWNOTTerminalRuleCall_2_0()); }
	RULE_WNOT
	{ after(grammarAccess.getColumnAccess().getWNOTTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getWNULLTerminalRuleCall_2_1()); }
	RULE_WNULL
	{ after(grammarAccess.getColumnAccess().getWNULLTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__0__Impl
	rule__PrimaryKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getWPRIMARY_KEYTerminalRuleCall_0()); }
	RULE_WPRIMARY_KEY
	{ after(grammarAccess.getPrimaryKeyAccess().getWPRIMARY_KEYTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__1__Impl
	rule__PrimaryKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_1()); }
	RULE_PARENTHESIS_IZQ
	{ after(grammarAccess.getPrimaryKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__2__Impl
	rule__PrimaryKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getIdsAssignment_2()); }
	(rule__PrimaryKey__IdsAssignment_2)
	{ after(grammarAccess.getPrimaryKeyAccess().getIdsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__3__Impl
	rule__PrimaryKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getGroup_3()); }
	(rule__PrimaryKey__Group_3__0)*
	{ after(grammarAccess.getPrimaryKeyAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__4__Impl
	rule__PrimaryKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getPARENTHESIS_DERTerminalRuleCall_4()); }
	RULE_PARENTHESIS_DER
	{ after(grammarAccess.getPrimaryKeyAccess().getPARENTHESIS_DERTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getCOMATerminalRuleCall_5()); }
	(RULE_COMA)?
	{ after(grammarAccess.getPrimaryKeyAccess().getCOMATerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_3__0__Impl
	rule__PrimaryKey__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getCOMATerminalRuleCall_3_0()); }
	RULE_COMA
	{ after(grammarAccess.getPrimaryKeyAccess().getCOMATerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getIdsAssignment_3_1()); }
	(rule__PrimaryKey__IdsAssignment_3_1)
	{ after(grammarAccess.getPrimaryKeyAccess().getIdsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__0__Impl
	rule__ForeignKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getWFOREIGN_KEYTerminalRuleCall_0()); }
	RULE_WFOREIGN_KEY
	{ after(grammarAccess.getForeignKeyAccess().getWFOREIGN_KEYTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__1__Impl
	rule__ForeignKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_1()); }
	RULE_PARENTHESIS_IZQ
	{ after(grammarAccess.getForeignKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__2__Impl
	rule__ForeignKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRefsToAssignment_2()); }
	(rule__ForeignKey__RefsToAssignment_2)
	{ after(grammarAccess.getForeignKeyAccess().getRefsToAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__3__Impl
	rule__ForeignKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getPARENTHESIS_DERTerminalRuleCall_3()); }
	RULE_PARENTHESIS_DER
	{ after(grammarAccess.getForeignKeyAccess().getPARENTHESIS_DERTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__4__Impl
	rule__ForeignKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getWREFERENCESTerminalRuleCall_4()); }
	RULE_WREFERENCES
	{ after(grammarAccess.getForeignKeyAccess().getWREFERENCESTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__5__Impl
	rule__ForeignKey__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getReferenceAssignment_5()); }
	(rule__ForeignKey__ReferenceAssignment_5)
	{ after(grammarAccess.getForeignKeyAccess().getReferenceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__6__Impl
	rule__ForeignKey__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_6()); }
	RULE_PARENTHESIS_IZQ
	{ after(grammarAccess.getForeignKeyAccess().getPARENTHESIS_IZQTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__7__Impl
	rule__ForeignKey__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRefsFromAssignment_7()); }
	(rule__ForeignKey__RefsFromAssignment_7)
	{ after(grammarAccess.getForeignKeyAccess().getRefsFromAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__8__Impl
	rule__ForeignKey__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getPARENTHESIS_DERTerminalRuleCall_8()); }
	RULE_PARENTHESIS_DER
	{ after(grammarAccess.getForeignKeyAccess().getPARENTHESIS_DERTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getCOMATerminalRuleCall_9()); }
	(RULE_COMA)?
	{ after(grammarAccess.getForeignKeyAccess().getCOMATerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeAssignment_0()); }
	(rule__DataType__DataTypeAssignment_0)
	{ after(grammarAccess.getDataTypeAccess().getDataTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_1()); }
	(rule__DataType__Group_1__0)?
	{ after(grammarAccess.getDataTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__0__Impl
	rule__DataType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getPARENTHESIS_IZQTerminalRuleCall_1_0()); }
	RULE_PARENTHESIS_IZQ
	{ after(grammarAccess.getDataTypeAccess().getPARENTHESIS_IZQTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__1__Impl
	rule__DataType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getPrecisionAssignment_1_1()); }
	(rule__DataType__PrecisionAssignment_1_1)
	{ after(grammarAccess.getDataTypeAccess().getPrecisionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getPARENTHESIS_DERTerminalRuleCall_1_2()); }
	RULE_PARENTHESIS_DER
	{ after(grammarAccess.getDataTypeAccess().getPARENTHESIS_DERTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__TablesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getTablesTableParserRuleCall_5_0()); }
		ruleTable
		{ after(grammarAccess.getSchemaAccess().getTablesTableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__PrimaryKeyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getPrimaryKeyPrimaryKeyParserRuleCall_5_0()); }
		rulePrimaryKey
		{ after(grammarAccess.getTableAccess().getPrimaryKeyPrimaryKeyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ForeignsKeysAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getForeignsKeysForeignKeyParserRuleCall_6_0()); }
		ruleForeignKey
		{ after(grammarAccess.getTableAccess().getForeignsKeysForeignKeyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__DataTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getDataTypeDataTypeParserRuleCall_1_0()); }
		ruleDataType
		{ after(grammarAccess.getColumnAccess().getDataTypeDataTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__IdsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getIdsColumnCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPrimaryKeyAccess().getIdsColumnIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryKeyAccess().getIdsColumnIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPrimaryKeyAccess().getIdsColumnCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__IdsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getIdsColumnCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getPrimaryKeyAccess().getIdsColumnIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryKeyAccess().getIdsColumnIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryKeyAccess().getIdsColumnCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__RefsToAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getRefsToColumnCrossReference_2_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getRefsToColumnIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getRefsToColumnIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getRefsToColumnCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ReferenceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getReferenceTableCrossReference_5_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getReferenceTableIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getReferenceTableIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getReferenceTableCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__RefsFromAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getRefsFromColumnCrossReference_7_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getRefsFromColumnIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getRefsFromColumnIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getRefsFromColumnCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DataTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getDataTypeENUM_DATA_TYPEEnumRuleCall_0_0()); }
		ruleENUM_DATA_TYPE
		{ after(grammarAccess.getDataTypeAccess().getDataTypeENUM_DATA_TYPEEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__PrecisionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getPrecisionINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDataTypeAccess().getPrecisionINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_WNEW : 'NEW';

RULE_WSCHEMA : 'SCHEMA';

RULE_WCREATE : 'CREATE';

RULE_WTABLE : 'TABLE';

RULE_WPRIMARY_KEY : 'PRIMARY KEY';

RULE_WFOREIGN_KEY : 'FOREIGN KEY';

RULE_WREFERENCES : 'REFERENCES';

RULE_WNOT : 'NOT';

RULE_WNULL : 'NULL';

RULE_PARENTHESIS_IZQ : '(';

RULE_PARENTHESIS_DER : ')';

RULE_SEMICOLON : ';';

RULE_COMA : ',';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
