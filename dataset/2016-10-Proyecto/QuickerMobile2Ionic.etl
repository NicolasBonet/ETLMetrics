/**
* Transorm a QuickerMobile app to an Ionic app.
* - Select the pre-defined language
* - Select the pre-defined font
* - Select the pre-defined font size
* - Select the pre-defined show mode
*/
rule QuickerMobile2Ionic
	transform
		s:QuickerMobile!QuickerApp
	to
		t:Ionic!IonicApp{
			t.name = s.name;
			t.modules.add(getPrincipalModule());
			t.categories = s.interestAreas.equivalent();
			
			t.showMode = s.showMode.literal;
			t.language = s.languages.value + '';
			t.font = s.fonts.literal;
			t.fontSize = s.fontSizes.literal;
		}

/**
* Transorm a QuickerMobile Interest area to an Ionic category.
* Make a recursive call to the rule to explre the interest areas and
* parse it to the respective category.
*/
@lazy
rule InterestArea2Category
	transform
		s:QuickerMobile!InterestArea
	to
		t:Ionic!Category{
			t.name = s.name;
			t.description = s.description;
			t.image = s.image;
			t.subcategories = s.subInterestAreas.equivalent();
			t.articles = s.articles.equivalent();
		}
		
/**
* Transorm a QuickerMobile article to an Ionic article.
* Make a equal relational parse.
*/
@lazy
rule Article2Article
	transform 
		s:QuickerMobile!Article
	to
		t:Ionic!Article{
			t.title = s.title;
			t.subTitle = s.subTitle;
			t.content = s.content;
			t.portraitImage = s.imagePortrait;			
			t.image = s.imageSmall;
		}		

/**
* Get the basic module for the Ionic App
* The principal module controll the basic and predefined features
*/
operation getPrincipalModule () : Ionic!Module {
	var element : Sequence;
	element.add("main");
	element.add("home");
	element.add("settings");
	element.add("categories");
	element.add("article");
	element.add("articles");
	
	var module = new Ionic!Module();
	module.name = "IonicApp";
	module.constants = getConstants();
	
	for(elementName : String in element){
		var controller = getController(elementName);
		module.angularElements.add(controller);
		module.views.add(getState(controller,elementName));
	}
	
	return module;
}

/**
* Get the all controllers for the Ionic App
* Each controller manage a specific view
*/
operation getController (name:String):Ionic!Controller{
	var basicDependencies : Sequence;
	basicDependencies.add("$scope");
	basicDependencies.add("$rootScope");
	basicDependencies.add("$cookieService");
	basicDependencies.add("$state");
	
	var controller = new Ionic!Controller();
	controller.name = name.firstToUpperCase() + "Controller";
	for(dependencyName : String in basicDependencies) {
		var angularDependency = new Ionic!AngularDependency();
		angularDependency.name = dependencyName;
		controller.angularDependencies.add(angularDependency);
	}
	
	return controller;
}

/**
* Get all the states for navigate in the ionic App
*/
operation getState(controller:Ionic!Controller, name:String):Ionic!State{
	
	var viewContent = new Ionic!ViewContent();
	viewContent.templeteUrl="templates/views/" + name + ".html";
	viewContent.controller = controller;
	
	var state = new Ionic!State();
	state.name = "app." + name;
	state.url="/"+name;
	state.cache=true;
	state.viewContent = viewContent;
	
	return state;
}

/**
* Get all the predefined constants.
* This constants enable the settings customization
*/
operation getConstants() : Sequence {
	var languages = new Ionic!Constant();
	languages.name = "LANGUAGES";
	languages.keyValues.add(getKeyValue(QuickerMobile!LANGUAGE#ESPANOL));
	languages.keyValues.add(getKeyValue(QuickerMobile!LANGUAGE#ENGLISH));
	languages.keyValues.add(getKeyValue(QuickerMobile!LANGUAGE#DEUTCH));
	
	var fonts = new Ionic!Constant();
	fonts.name = "TYPOGRAPHY";
	fonts.keyValues.add(getKeyValue(QuickerMobile!FONT#ARIAL));
	fonts.keyValues.add(getKeyValue(QuickerMobile!FONT#VERDANA));
	fonts.keyValues.add(getKeyValue(QuickerMobile!FONT#LATO));
	fonts.keyValues.add(getKeyValue(QuickerMobile!FONT#ROBOTO));
	
	var fontSizes = new Ionic!Constant();
	fontSizes.name = "FONT_SIZE";
	fontSizes.keyValues.add(getKeyValue(QuickerMobile!FONT_SIZE#SMALL));
	fontSizes.keyValues.add(getKeyValue(QuickerMobile!FONT_SIZE#NORMAL));
	fontSizes.keyValues.add(getKeyValue(QuickerMobile!FONT_SIZE#BIG));
	
	var constants : Sequence;
	constants.add(languages);
	constants.add(fonts);
	constants.add(fontSizes);
	return constants;
}

/**
* Get a Key Value Object
*/
operation getKeyValue(label) : Ionic!KeyValue{
	var keyValue = new Ionic!KeyValue();
	keyValue.key="label";
	keyValue.value=(label + "").toLowerCase().firstToUpperCase();
	return keyValue;
}