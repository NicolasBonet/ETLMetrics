/*
* generated by Xtext
*/
package org.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class CsharpGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class CSharpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CSharp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCSharpAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cClasesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClasesClaseParserRuleCall_1_0 = (RuleCall)cClasesAssignment_1.eContents().get(0);
		
		//CSharp:
		//	{CSharp} clases+=Clase*;
		public ParserRule getRule() { return rule; }

		//{CSharp} clases+=Clase*
		public Group getGroup() { return cGroup; }

		//{CSharp}
		public Action getCSharpAction_0() { return cCSharpAction_0; }

		//clases+=Clase*
		public Assignment getClasesAssignment_1() { return cClasesAssignment_1; }

		//Clase
		public RuleCall getClasesClaseParserRuleCall_1_0() { return cClasesClaseParserRuleCall_1_0; }
	}

	public class ClaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Clase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClaseAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamespaceExpressionStringParserRuleCall_1_0 = (RuleCall)cNamespaceAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAtributosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAtributosAtributoParserRuleCall_3_0 = (RuleCall)cAtributosAssignment_3.eContents().get(0);
		private final Keyword cPublicClassKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSuperAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSuperIDTerminalRuleCall_6_1_0 = (RuleCall)cSuperAssignment_6_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTextoAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTextoExpressionStringParserRuleCall_8_0 = (RuleCall)cTextoAssignment_8.eContents().get(0);
		private final Assignment cConstructoresAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConstructoresConstructorParserRuleCall_9_0 = (RuleCall)cConstructoresAssignment_9.eContents().get(0);
		private final Assignment cEnumsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEnumsEnumParserRuleCall_10_0 = (RuleCall)cEnumsAssignment_10.eContents().get(0);
		private final Assignment cPropiedadesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPropiedadesPropiedadParserRuleCall_11_0 = (RuleCall)cPropiedadesAssignment_11.eContents().get(0);
		private final Assignment cMetodosAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cMetodosMetodoParserRuleCall_12_0 = (RuleCall)cMetodosAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Clase:
		//	{Clase} namespace=ExpressionString "{" atributos+=Atributo* "public class" name=ID (":" super=ID)? "{"
		//	texto=ExpressionString constructores+=Constructor* enums+=Enum* propiedades+=Propiedad* metodos+=Metodo* "}" "}";
		public ParserRule getRule() { return rule; }

		//{Clase} namespace=ExpressionString "{" atributos+=Atributo* "public class" name=ID (":" super=ID)? "{"
		//texto=ExpressionString constructores+=Constructor* enums+=Enum* propiedades+=Propiedad* metodos+=Metodo* "}" "}"
		public Group getGroup() { return cGroup; }

		//{Clase}
		public Action getClaseAction_0() { return cClaseAction_0; }

		//namespace=ExpressionString
		public Assignment getNamespaceAssignment_1() { return cNamespaceAssignment_1; }

		//ExpressionString
		public RuleCall getNamespaceExpressionStringParserRuleCall_1_0() { return cNamespaceExpressionStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//atributos+=Atributo*
		public Assignment getAtributosAssignment_3() { return cAtributosAssignment_3; }

		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_3_0() { return cAtributosAtributoParserRuleCall_3_0; }

		//"public class"
		public Keyword getPublicClassKeyword_4() { return cPublicClassKeyword_4; }

		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//(":" super=ID)?
		public Group getGroup_6() { return cGroup_6; }

		//":"
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }

		//super=ID
		public Assignment getSuperAssignment_6_1() { return cSuperAssignment_6_1; }

		//ID
		public RuleCall getSuperIDTerminalRuleCall_6_1_0() { return cSuperIDTerminalRuleCall_6_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//texto=ExpressionString
		public Assignment getTextoAssignment_8() { return cTextoAssignment_8; }

		//ExpressionString
		public RuleCall getTextoExpressionStringParserRuleCall_8_0() { return cTextoExpressionStringParserRuleCall_8_0; }

		//constructores+=Constructor*
		public Assignment getConstructoresAssignment_9() { return cConstructoresAssignment_9; }

		//Constructor
		public RuleCall getConstructoresConstructorParserRuleCall_9_0() { return cConstructoresConstructorParserRuleCall_9_0; }

		//enums+=Enum*
		public Assignment getEnumsAssignment_10() { return cEnumsAssignment_10; }

		//Enum
		public RuleCall getEnumsEnumParserRuleCall_10_0() { return cEnumsEnumParserRuleCall_10_0; }

		//propiedades+=Propiedad*
		public Assignment getPropiedadesAssignment_11() { return cPropiedadesAssignment_11; }

		//Propiedad
		public RuleCall getPropiedadesPropiedadParserRuleCall_11_0() { return cPropiedadesPropiedadParserRuleCall_11_0; }

		//metodos+=Metodo*
		public Assignment getMetodosAssignment_12() { return cMetodosAssignment_12; }

		//Metodo
		public RuleCall getMetodosMetodoParserRuleCall_12_0() { return cMetodosMetodoParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Atributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAtributoAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cAlternatives_3_1.eContents().get(0);
		private final Assignment cPropiedadesAssignment_3_1_0_0 = (Assignment)cGroup_3_1_0.eContents().get(0);
		private final RuleCall cPropiedadesPropiedadAtributoParserRuleCall_3_1_0_0_0 = (RuleCall)cPropiedadesAssignment_3_1_0_0.eContents().get(0);
		private final Group cGroup_3_1_0_1 = (Group)cGroup_3_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0_1_0 = (Keyword)cGroup_3_1_0_1.eContents().get(0);
		private final Assignment cPropiedadesAssignment_3_1_0_1_1 = (Assignment)cGroup_3_1_0_1.eContents().get(1);
		private final RuleCall cPropiedadesPropiedadAtributoParserRuleCall_3_1_0_1_1_0 = (RuleCall)cPropiedadesAssignment_3_1_0_1_1.eContents().get(0);
		private final Assignment cValorAssignment_3_1_1 = (Assignment)cAlternatives_3_1.eContents().get(1);
		private final RuleCall cValorSTRINGTerminalRuleCall_3_1_1_0 = (RuleCall)cValorAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Atributo:
		//	{Atributo} "[" name=ID ("(" (propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)* | valor=STRING)
		//	")")? "]";
		public ParserRule getRule() { return rule; }

		//{Atributo} "[" name=ID ("(" (propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)* | valor=STRING) ")")?
		//"]"
		public Group getGroup() { return cGroup; }

		//{Atributo}
		public Action getAtributoAction_0() { return cAtributoAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" (propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)* | valor=STRING) ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)* | valor=STRING
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)*
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }

		//propiedades+=PropiedadAtributo
		public Assignment getPropiedadesAssignment_3_1_0_0() { return cPropiedadesAssignment_3_1_0_0; }

		//PropiedadAtributo
		public RuleCall getPropiedadesPropiedadAtributoParserRuleCall_3_1_0_0_0() { return cPropiedadesPropiedadAtributoParserRuleCall_3_1_0_0_0; }

		//("," propiedades+=PropiedadAtributo)*
		public Group getGroup_3_1_0_1() { return cGroup_3_1_0_1; }

		//","
		public Keyword getCommaKeyword_3_1_0_1_0() { return cCommaKeyword_3_1_0_1_0; }

		//propiedades+=PropiedadAtributo
		public Assignment getPropiedadesAssignment_3_1_0_1_1() { return cPropiedadesAssignment_3_1_0_1_1; }

		//PropiedadAtributo
		public RuleCall getPropiedadesPropiedadAtributoParserRuleCall_3_1_0_1_1_0() { return cPropiedadesPropiedadAtributoParserRuleCall_3_1_0_1_1_0; }

		//valor=STRING
		public Assignment getValorAssignment_3_1_1() { return cValorAssignment_3_1_1; }

		//STRING
		public RuleCall getValorSTRINGTerminalRuleCall_3_1_1_0() { return cValorSTRINGTerminalRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class PropiedadAtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropiedadAtributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPropiedadAtributoAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValorEStringParserRuleCall_3_0 = (RuleCall)cValorAssignment_3.eContents().get(0);
		
		//PropiedadAtributo:
		//	{PropiedadAtributo} name=ID "=" valor=EString;
		public ParserRule getRule() { return rule; }

		//{PropiedadAtributo} name=ID "=" valor=EString
		public Group getGroup() { return cGroup; }

		//{PropiedadAtributo}
		public Action getPropiedadAtributoAction_0() { return cPropiedadAtributoAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//valor=EString
		public Assignment getValorAssignment_3() { return cValorAssignment_3; }

		//EString
		public RuleCall getValorEStringParserRuleCall_3_0() { return cValorEStringParserRuleCall_3_0; }
	}

	public class ConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstructorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPublicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cParametrosAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cParametrosParametroParserRuleCall_4_0_0 = (RuleCall)cParametrosAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cParametrosAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cParametrosParametroParserRuleCall_4_1_1_0 = (RuleCall)cParametrosAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTextoAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTextoExpressionStringParserRuleCall_7_0 = (RuleCall)cTextoAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Constructor:
		//	{Constructor} "public " name=ID "(" (parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{"
		//	texto=ExpressionString "}";
		public ParserRule getRule() { return rule; }

		//{Constructor} "public " name=ID "(" (parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{" texto=ExpressionString
		//"}"
		public Group getGroup() { return cGroup; }

		//{Constructor}
		public Action getConstructorAction_0() { return cConstructorAction_0; }

		//"public "
		public Keyword getPublicKeyword_1() { return cPublicKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(parametros+=Parametro ("," parametros+=Parametro)*)?
		public Group getGroup_4() { return cGroup_4; }

		//parametros+=Parametro
		public Assignment getParametrosAssignment_4_0() { return cParametrosAssignment_4_0; }

		//Parametro
		public RuleCall getParametrosParametroParserRuleCall_4_0_0() { return cParametrosParametroParserRuleCall_4_0_0; }

		//("," parametros+=Parametro)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//parametros+=Parametro
		public Assignment getParametrosAssignment_4_1_1() { return cParametrosAssignment_4_1_1; }

		//Parametro
		public RuleCall getParametrosParametroParserRuleCall_4_1_1_0() { return cParametrosParametroParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//texto=ExpressionString
		public Assignment getTextoAssignment_7() { return cTextoAssignment_7; }

		//ExpressionString
		public RuleCall getTextoExpressionStringParserRuleCall_7_0() { return cTextoExpressionStringParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class EnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPublicEnumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cValoresAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cValoresEnumLiteralParserRuleCall_4_0_0 = (RuleCall)cValoresAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cValoresAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cValoresEnumLiteralParserRuleCall_4_1_1_0 = (RuleCall)cValoresAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Enum:
		//	{Enum} "public enum " name=EString "{" (valores+=EnumLiteral ("," valores+=EnumLiteral)*)? "}";
		public ParserRule getRule() { return rule; }

		//{Enum} "public enum " name=EString "{" (valores+=EnumLiteral ("," valores+=EnumLiteral)*)? "}"
		public Group getGroup() { return cGroup; }

		//{Enum}
		public Action getEnumAction_0() { return cEnumAction_0; }

		//"public enum "
		public Keyword getPublicEnumKeyword_1() { return cPublicEnumKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(valores+=EnumLiteral ("," valores+=EnumLiteral)*)?
		public Group getGroup_4() { return cGroup_4; }

		//valores+=EnumLiteral
		public Assignment getValoresAssignment_4_0() { return cValoresAssignment_4_0; }

		//EnumLiteral
		public RuleCall getValoresEnumLiteralParserRuleCall_4_0_0() { return cValoresEnumLiteralParserRuleCall_4_0_0; }

		//("," valores+=EnumLiteral)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//valores+=EnumLiteral
		public Assignment getValoresAssignment_4_1_1() { return cValoresAssignment_4_1_1; }

		//EnumLiteral
		public RuleCall getValoresEnumLiteralParserRuleCall_4_1_1_0() { return cValoresEnumLiteralParserRuleCall_4_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//EnumLiteral:
		//	{EnumLiteral} name=EString;
		public ParserRule getRule() { return rule; }

		//{EnumLiteral} name=EString
		public Group getGroup() { return cGroup; }

		//{EnumLiteral}
		public Action getEnumLiteralAction_0() { return cEnumLiteralAction_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}

	public class ListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "List");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cListKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cIEnumerableKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClaseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cClaseClaseCrossReference_2_0 = (CrossReference)cClaseAssignment_2.eContents().get(0);
		private final RuleCall cClaseClaseIDTerminalRuleCall_2_0_1 = (RuleCall)cClaseClaseCrossReference_2_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//List:
		//	("List" | "IEnumerable") "<" clase=[Clase] ">";
		public ParserRule getRule() { return rule; }

		//("List" | "IEnumerable") "<" clase=[Clase] ">"
		public Group getGroup() { return cGroup; }

		//"List" | "IEnumerable"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"List"
		public Keyword getListKeyword_0_0() { return cListKeyword_0_0; }

		//"IEnumerable"
		public Keyword getIEnumerableKeyword_0_1() { return cIEnumerableKeyword_0_1; }

		//"<"
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }

		//clase=[Clase]
		public Assignment getClaseAssignment_2() { return cClaseAssignment_2; }

		//[Clase]
		public CrossReference getClaseClaseCrossReference_2_0() { return cClaseClaseCrossReference_2_0; }

		//ID
		public RuleCall getClaseClaseIDTerminalRuleCall_2_0_1() { return cClaseClaseIDTerminalRuleCall_2_0_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}

	public class TipoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Tipo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClaseParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////Jaja returns TypedObject:
		////	(clase = [Clase] | ^enum= [Enum]);
		//Tipo:
		//	Clase | Enum;
		public ParserRule getRule() { return rule; }

		//Clase | Enum
		public Alternatives getAlternatives() { return cAlternatives; }

		//Clase
		public RuleCall getClaseParserRuleCall_0() { return cClaseParserRuleCall_0; }

		//Enum
		public RuleCall getEnumParserRuleCall_1() { return cEnumParserRuleCall_1; }
	}

	public class PropiedadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Propiedad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPropiedadAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAtributosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAtributosAtributoParserRuleCall_1_0 = (RuleCall)cAtributosAssignment_1.eContents().get(0);
		private final Keyword cPublicKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTipoAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cTipoTipoCrossReference_3_0_0 = (CrossReference)cTipoAssignment_3_0.eContents().get(0);
		private final RuleCall cTipoTipoEStringParserRuleCall_3_0_0_1 = (RuleCall)cTipoTipoCrossReference_3_0_0.eContents().get(1);
		private final Assignment cTipoPrimitivoAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0 = (RuleCall)cTipoPrimitivoAssignment_3_1.eContents().get(0);
		private final Assignment cListaAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cListaListParserRuleCall_3_2_0 = (RuleCall)cListaAssignment_3_2.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGetKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Propiedad:
		//	{Propiedad} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "{"
		//	("get" ";")? ("set" ";")? "}";
		public ParserRule getRule() { return rule; }

		//{Propiedad} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "{"
		//("get" ";")? ("set" ";")? "}"
		public Group getGroup() { return cGroup; }

		//{Propiedad}
		public Action getPropiedadAction_0() { return cPropiedadAction_0; }

		//atributos+=Atributo*
		public Assignment getAtributosAssignment_1() { return cAtributosAssignment_1; }

		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_1_0() { return cAtributosAtributoParserRuleCall_1_0; }

		//"public "
		public Keyword getPublicKeyword_2() { return cPublicKeyword_2; }

		//tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//tipo=[Tipo|EString]
		public Assignment getTipoAssignment_3_0() { return cTipoAssignment_3_0; }

		//[Tipo|EString]
		public CrossReference getTipoTipoCrossReference_3_0_0() { return cTipoTipoCrossReference_3_0_0; }

		//EString
		public RuleCall getTipoTipoEStringParserRuleCall_3_0_0_1() { return cTipoTipoEStringParserRuleCall_3_0_0_1; }

		//tipoPrimitivo=DATATYPES
		public Assignment getTipoPrimitivoAssignment_3_1() { return cTipoPrimitivoAssignment_3_1; }

		//DATATYPES
		public RuleCall getTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0() { return cTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0; }

		//lista+=List
		public Assignment getListaAssignment_3_2() { return cListaAssignment_3_2; }

		//List
		public RuleCall getListaListParserRuleCall_3_2_0() { return cListaListParserRuleCall_3_2_0; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//("get" ";")?
		public Group getGroup_6() { return cGroup_6; }

		//"get"
		public Keyword getGetKeyword_6_0() { return cGetKeyword_6_0; }

		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }

		//("set" ";")?
		public Group getGroup_7() { return cGroup_7; }

		//"set"
		public Keyword getSetKeyword_7_0() { return cSetKeyword_7_0; }

		//";"
		public Keyword getSemicolonKeyword_7_1() { return cSemicolonKeyword_7_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class MetodoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Metodo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetodoAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAtributosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAtributosAtributoParserRuleCall_1_0 = (RuleCall)cAtributosAssignment_1.eContents().get(0);
		private final Keyword cPublicKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTipoAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cTipoTipoCrossReference_3_0_0 = (CrossReference)cTipoAssignment_3_0.eContents().get(0);
		private final RuleCall cTipoTipoEStringParserRuleCall_3_0_0_1 = (RuleCall)cTipoTipoCrossReference_3_0_0.eContents().get(1);
		private final Assignment cTipoPrimitivoAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0 = (RuleCall)cTipoPrimitivoAssignment_3_1.eContents().get(0);
		private final Assignment cListaAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cListaListParserRuleCall_3_2_0 = (RuleCall)cListaAssignment_3_2.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cParametrosAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cParametrosParametroParserRuleCall_6_0_0 = (RuleCall)cParametrosAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cParametrosAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cParametrosParametroParserRuleCall_6_1_1_0 = (RuleCall)cParametrosAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTextoAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTextoExpressionStringParserRuleCall_9_0 = (RuleCall)cTextoAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Metodo:
		//	{Metodo} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "("
		//	(parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{" texto=ExpressionString "}";
		public ParserRule getRule() { return rule; }

		//{Metodo} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "("
		//(parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{" texto=ExpressionString "}"
		public Group getGroup() { return cGroup; }

		//{Metodo}
		public Action getMetodoAction_0() { return cMetodoAction_0; }

		//atributos+=Atributo*
		public Assignment getAtributosAssignment_1() { return cAtributosAssignment_1; }

		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_1_0() { return cAtributosAtributoParserRuleCall_1_0; }

		//"public "
		public Keyword getPublicKeyword_2() { return cPublicKeyword_2; }

		//tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//tipo=[Tipo|EString]
		public Assignment getTipoAssignment_3_0() { return cTipoAssignment_3_0; }

		//[Tipo|EString]
		public CrossReference getTipoTipoCrossReference_3_0_0() { return cTipoTipoCrossReference_3_0_0; }

		//EString
		public RuleCall getTipoTipoEStringParserRuleCall_3_0_0_1() { return cTipoTipoEStringParserRuleCall_3_0_0_1; }

		//tipoPrimitivo=DATATYPES
		public Assignment getTipoPrimitivoAssignment_3_1() { return cTipoPrimitivoAssignment_3_1; }

		//DATATYPES
		public RuleCall getTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0() { return cTipoPrimitivoDATATYPESTerminalRuleCall_3_1_0; }

		//lista+=List
		public Assignment getListaAssignment_3_2() { return cListaAssignment_3_2; }

		//List
		public RuleCall getListaListParserRuleCall_3_2_0() { return cListaListParserRuleCall_3_2_0; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//(parametros+=Parametro ("," parametros+=Parametro)*)?
		public Group getGroup_6() { return cGroup_6; }

		//parametros+=Parametro
		public Assignment getParametrosAssignment_6_0() { return cParametrosAssignment_6_0; }

		//Parametro
		public RuleCall getParametrosParametroParserRuleCall_6_0_0() { return cParametrosParametroParserRuleCall_6_0_0; }

		//("," parametros+=Parametro)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//parametros+=Parametro
		public Assignment getParametrosAssignment_6_1_1() { return cParametrosAssignment_6_1_1; }

		//Parametro
		public RuleCall getParametrosParametroParserRuleCall_6_1_1_0() { return cParametrosParametroParserRuleCall_6_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//texto=ExpressionString
		public Assignment getTextoAssignment_9() { return cTextoAssignment_9; }

		//ExpressionString
		public RuleCall getTextoExpressionStringParserRuleCall_9_0() { return cTextoExpressionStringParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ParametroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parametro");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParametroAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAtributosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAtributosAtributoParserRuleCall_1_0 = (RuleCall)cAtributosAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTipoAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTipoTipoCrossReference_2_0_0 = (CrossReference)cTipoAssignment_2_0.eContents().get(0);
		private final RuleCall cTipoTipoEStringParserRuleCall_2_0_0_1 = (RuleCall)cTipoTipoCrossReference_2_0_0.eContents().get(1);
		private final Assignment cTipoPrimitivoAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cTipoPrimitivoDATATYPESTerminalRuleCall_2_1_0 = (RuleCall)cTipoPrimitivoAssignment_2_1.eContents().get(0);
		private final Assignment cListaAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cListaListParserRuleCall_2_2_0 = (RuleCall)cListaAssignment_2_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Parametro:
		//	{Parametro} atributos+=Atributo* (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID;
		public ParserRule getRule() { return rule; }

		//{Parametro} atributos+=Atributo* (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID
		public Group getGroup() { return cGroup; }

		//{Parametro}
		public Action getParametroAction_0() { return cParametroAction_0; }

		//atributos+=Atributo*
		public Assignment getAtributosAssignment_1() { return cAtributosAssignment_1; }

		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_1_0() { return cAtributosAtributoParserRuleCall_1_0; }

		//tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//tipo=[Tipo|EString]
		public Assignment getTipoAssignment_2_0() { return cTipoAssignment_2_0; }

		//[Tipo|EString]
		public CrossReference getTipoTipoCrossReference_2_0_0() { return cTipoTipoCrossReference_2_0_0; }

		//EString
		public RuleCall getTipoTipoEStringParserRuleCall_2_0_0_1() { return cTipoTipoEStringParserRuleCall_2_0_0_1; }

		//tipoPrimitivo=DATATYPES
		public Assignment getTipoPrimitivoAssignment_2_1() { return cTipoPrimitivoAssignment_2_1; }

		//DATATYPES
		public RuleCall getTipoPrimitivoDATATYPESTerminalRuleCall_2_1_0() { return cTipoPrimitivoDATATYPESTerminalRuleCall_2_1_0; }

		//lista+=List
		public Assignment getListaAssignment_2_2() { return cListaAssignment_2_2; }

		//List
		public RuleCall getListaListParserRuleCall_2_2_0() { return cListaListParserRuleCall_2_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class CharactersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Characters");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword c_Keyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//Characters returns ecore::EString:
		//	ID | "." | ";" | "_" | "(" | ")" | "=";
		public ParserRule getRule() { return rule; }

		//ID | "." | ";" | "_" | "(" | ")" | "="
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//"_"
		public Keyword get_Keyword_3() { return c_Keyword_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//"="
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
	}

	public class BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cCharactersParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Block returns ecore::EString:
		//	"{" Characters* "}";
		public ParserRule getRule() { return rule; }

		//"{" Characters* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//Characters*
		public RuleCall getCharactersParserRuleCall_1() { return cCharactersParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class ExpressionStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCharactersParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBlockParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ExpressionString returns ecore::EString:
		//	(Characters | Block)*;
		public ParserRule getRule() { return rule; }

		//(Characters | Block)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//Characters
		public RuleCall getCharactersParserRuleCall_0() { return cCharactersParserRuleCall_0; }

		//Block
		public RuleCall getBlockParserRuleCall_1() { return cBlockParserRuleCall_1; }
	}
	
	
	private final CSharpElements pCSharp;
	private final ClaseElements pClase;
	private final AtributoElements pAtributo;
	private final PropiedadAtributoElements pPropiedadAtributo;
	private final ConstructorElements pConstructor;
	private final EnumElements pEnum;
	private final EnumLiteralElements pEnumLiteral;
	private final ListElements pList;
	private final TipoElements pTipo;
	private final PropiedadElements pPropiedad;
	private final MetodoElements pMetodo;
	private final ParametroElements pParametro;
	private final EStringElements pEString;
	private final CharactersElements pCharacters;
	private final BlockElements pBlock;
	private final ExpressionStringElements pExpressionString;
	private final TerminalRule tDATATYPES;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CsharpGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCSharp = new CSharpElements();
		this.pClase = new ClaseElements();
		this.pAtributo = new AtributoElements();
		this.pPropiedadAtributo = new PropiedadAtributoElements();
		this.pConstructor = new ConstructorElements();
		this.pEnum = new EnumElements();
		this.pEnumLiteral = new EnumLiteralElements();
		this.pList = new ListElements();
		this.pTipo = new TipoElements();
		this.pPropiedad = new PropiedadElements();
		this.pMetodo = new MetodoElements();
		this.pParametro = new ParametroElements();
		this.pEString = new EStringElements();
		this.pCharacters = new CharactersElements();
		this.pBlock = new BlockElements();
		this.pExpressionString = new ExpressionStringElements();
		this.tDATATYPES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DATATYPES");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Csharp".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//CSharp:
	//	{CSharp} clases+=Clase*;
	public CSharpElements getCSharpAccess() {
		return pCSharp;
	}
	
	public ParserRule getCSharpRule() {
		return getCSharpAccess().getRule();
	}

	//Clase:
	//	{Clase} namespace=ExpressionString "{" atributos+=Atributo* "public class" name=ID (":" super=ID)? "{"
	//	texto=ExpressionString constructores+=Constructor* enums+=Enum* propiedades+=Propiedad* metodos+=Metodo* "}" "}";
	public ClaseElements getClaseAccess() {
		return pClase;
	}
	
	public ParserRule getClaseRule() {
		return getClaseAccess().getRule();
	}

	//Atributo:
	//	{Atributo} "[" name=ID ("(" (propiedades+=PropiedadAtributo ("," propiedades+=PropiedadAtributo)* | valor=STRING)
	//	")")? "]";
	public AtributoElements getAtributoAccess() {
		return pAtributo;
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}

	//PropiedadAtributo:
	//	{PropiedadAtributo} name=ID "=" valor=EString;
	public PropiedadAtributoElements getPropiedadAtributoAccess() {
		return pPropiedadAtributo;
	}
	
	public ParserRule getPropiedadAtributoRule() {
		return getPropiedadAtributoAccess().getRule();
	}

	//Constructor:
	//	{Constructor} "public " name=ID "(" (parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{"
	//	texto=ExpressionString "}";
	public ConstructorElements getConstructorAccess() {
		return pConstructor;
	}
	
	public ParserRule getConstructorRule() {
		return getConstructorAccess().getRule();
	}

	//Enum:
	//	{Enum} "public enum " name=EString "{" (valores+=EnumLiteral ("," valores+=EnumLiteral)*)? "}";
	public EnumElements getEnumAccess() {
		return pEnum;
	}
	
	public ParserRule getEnumRule() {
		return getEnumAccess().getRule();
	}

	//EnumLiteral:
	//	{EnumLiteral} name=EString;
	public EnumLiteralElements getEnumLiteralAccess() {
		return pEnumLiteral;
	}
	
	public ParserRule getEnumLiteralRule() {
		return getEnumLiteralAccess().getRule();
	}

	//List:
	//	("List" | "IEnumerable") "<" clase=[Clase] ">";
	public ListElements getListAccess() {
		return pList;
	}
	
	public ParserRule getListRule() {
		return getListAccess().getRule();
	}

	////Jaja returns TypedObject:
	////	(clase = [Clase] | ^enum= [Enum]);
	//Tipo:
	//	Clase | Enum;
	public TipoElements getTipoAccess() {
		return pTipo;
	}
	
	public ParserRule getTipoRule() {
		return getTipoAccess().getRule();
	}

	//Propiedad:
	//	{Propiedad} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "{"
	//	("get" ";")? ("set" ";")? "}";
	public PropiedadElements getPropiedadAccess() {
		return pPropiedad;
	}
	
	public ParserRule getPropiedadRule() {
		return getPropiedadAccess().getRule();
	}

	//Metodo:
	//	{Metodo} atributos+=Atributo* "public " (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID "("
	//	(parametros+=Parametro ("," parametros+=Parametro)*)? ")" "{" texto=ExpressionString "}";
	public MetodoElements getMetodoAccess() {
		return pMetodo;
	}
	
	public ParserRule getMetodoRule() {
		return getMetodoAccess().getRule();
	}

	//Parametro:
	//	{Parametro} atributos+=Atributo* (tipo=[Tipo|EString] | tipoPrimitivo=DATATYPES | lista+=List) name=ID;
	public ParametroElements getParametroAccess() {
		return pParametro;
	}
	
	public ParserRule getParametroRule() {
		return getParametroAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//Characters returns ecore::EString:
	//	ID | "." | ";" | "_" | "(" | ")" | "=";
	public CharactersElements getCharactersAccess() {
		return pCharacters;
	}
	
	public ParserRule getCharactersRule() {
		return getCharactersAccess().getRule();
	}

	//Block returns ecore::EString:
	//	"{" Characters* "}";
	public BlockElements getBlockAccess() {
		return pBlock;
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}

	//ExpressionString returns ecore::EString:
	//	(Characters | Block)*;
	public ExpressionStringElements getExpressionStringAccess() {
		return pExpressionString;
	}
	
	public ParserRule getExpressionStringRule() {
		return getExpressionStringAccess().getRule();
	}

	////terminal PUBLIC:
	////	"public";
	////terminal CLASS:
	////	"public class"; terminal DATATYPES:
	//	"int" | "string" | "bool" | "void" | "decimal" | "double" | "IHttpActionResult";
	public TerminalRule getDATATYPESRule() {
		return tDATATYPES;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
