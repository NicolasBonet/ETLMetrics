import "transformOperations.eol";
import "sql2JavaEntities.etl";
import "sql2JavaTest.etl";
import "sql2JavaEntitiesManager.etl";

pre {
	"Running ETL".println();
	
	// This map will save all data types 
	var typeMap : new Map;
}


/**
* This rule is the starting point of the transformation, this map DataBase
* to Project. We will launch the definition of the rootPackage and dataType
* relation throught the equivalent function to  
*/
rule DataBase2Project
	transform d : sql!DataBase
	to p : java!Project {
		p.name = "co.edu.uniandes.sqlcrud";
		p.extractTypes();
		
		// This package storage the entity mapping
		var entitiesPackage = new java!Package;
		entitiesPackage.name = "entities";
		entitiesPackage.classes = d.table.equivalent();
		p.packages.add(entitiesPackage);
		
		// This package manages the persistence
		var entitiesPackage = new java!Package;
		entitiesPackage.name = "marketplace";
		entitiesPackage.classes.add(p.packages.select(p|p.name == "entities").first().entityManager());
		p.packages.add(entitiesPackage);

		// This package storage the unit tests for entities
		var testPackage = new java!Package;
		testPackage.name = "test";
		testPackage.classes.addAll(p.packages.select(p|p.name == "entities").classes.flatten().reject(e|e.attributes.size() == e.attributes.select(a|a.annotateAttribute.collect(i|i.name).contains("@Id")).size()).collect(e|e.testEntityClass()));
		p.packages.add(testPackage);
	}

post {
	// Print the results 
	("Project: " + java!Project.all().size()).println(); 
	("Package: " + java!Package.all().size()).println();
	("Class: " + java!Class.all().size()).println();
	("Attribute: " + java!Attribute.all().size()).println();
	("Method: " + java!Method.all().size()).println();
	("Annotation: " + java!Annotation.all().size()).println();
}