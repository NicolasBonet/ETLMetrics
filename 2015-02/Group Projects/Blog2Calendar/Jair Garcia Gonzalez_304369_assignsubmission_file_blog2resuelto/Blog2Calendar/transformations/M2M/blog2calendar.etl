pre{
	var int = Native('java.lang.Integer');
}

rule Blog2Calendar
	transform s : blog!Blog
	to t : cal!Calendar {
	("Blog2Calendar ").println();
	t.name='Calendario';
	t.years=new Sequence();
	var result=new Map();
	for( article in s.categories.collect(c|c.articles).flatten){
		var year = article.date.split('/').last;
		var month = article.date.split('/')[1];
		var day = article.date.split('/')[0];
		result.getOrCreate(year).getOrCreate(month).getOrCreate(day).
			put(article.id+'_'+article.url, article);
	}
	for( year in result.keySet()){
		var yearmap= result.get(year);
		//loop for every year
		
		var tyear = new cal!Year();
		tyear.months=new Sequence();
		tyear.year = int.parseInt(year);
		t.years.add(tyear);
		for(month in yearmap.keySet()){
			var monthmap=yearmap.get(month);
			//loop for every month
			
			var tmonth = new cal!Month();
			tmonth.year = tyear;
			tmonth.days=new Sequence();
			tmonth.month=int.parseInt(month);
			tyear.months.add(tmonth);
			for( day in monthmap.keySet()){
				var daymap=monthmap.get(day);
				//loop for every day 				
				
				var tday = new cal!Day();
				tday.month = tmonth;
				tday.events=new Sequence();
				tday.day=int.parseInt(day);
				tmonth.days.add(tday);
				for(event_uuid in daymap.keySet()){
					var article=daymap.get(event_uuid);
					var tevent = new cal!Event();
					tevent.event=article.content;
					tevent.location=article.url;
					tevent.owner = article.author.name;
					tevent.tags=article.tags.collect(a|a.tag).toString()
						.replace('\\[','').replace('\\]','');
					tevent.day = tday;
					tday.events.add(tevent);
				}
			}
		}
	}
}

operation Map getOrCreate(key){
	if(not self.containsKey(key))
		self.put(key, new Map());
	return self.get(key);
}