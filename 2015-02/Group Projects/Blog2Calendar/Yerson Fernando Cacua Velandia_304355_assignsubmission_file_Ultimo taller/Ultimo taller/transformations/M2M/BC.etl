pre{
	var calendar=null;
	var year=new Set;
	var month=new Set;
	var map=new Map;
}

rule BlogToCalendar 
	transform s : s!Blog
	to t : t!Calendar {
	 t.name=s.name;
	 calendar=t;
}
rule AticleToYear 
	transform s : s!Article
	to t : t!Year {
		guard :  validateYear(s)
		 t.year=Native("java.lang.Integer").parseInt(getYear(s));
		 calendar.years.add(t);
		 map.put(getYear(s),t);	 
}

rule ArticleToMonth
	transform s : s!Article
	to t : t!Month{
	guard :validateMonth(s)
		var year=map.get(getYear(s));
		t.month=Native("java.lang.Integer").parseInt(getMonth(s));
		t.year = year;
		year.months.add(t);
	
}
rule ArticleToDay
	transform s : s!Article
	to t : t!Day{
		t.day=Native("java.lang.Integer").parseInt(getDay(s));
		var anio=map.get(getYear(s));
		var month=anio.months;
		for(mes in month){
			if(mes.month=Native("java.lang.Integer").parseInt(getMonth(s))){
				mes.days.add(t);
				t.month=mes;
				var e=new t!Event();
				e.event=s.url;
				e.owner=s.author.name;
				e.day=t;
				t.events.add(e);
				var ta="";
				for(c in s.tags){
					ta=ta+c.tag+";";
				}
				e.tags=ta;
				break;
			}
		}
}

operation getYear(s){
	return s.date.split("/").get(2);
}

operation getMonth(s){
	return s.date.split("/").get(1);
}

operation getDay(s){
	return s.date.split("/").get(0);
}

operation validateMonth(s){
	if(month.indexOf(getMonth(s))=-1){
		month.add(getMonth(s));
		return true;
	}else{
		return false;
	}
}

operation validateYear(s){
	if(year.indexOf(getYear(s))=-1){
		year.add(getYear(s));
		return true;
	}else{
		return false;
	}
}