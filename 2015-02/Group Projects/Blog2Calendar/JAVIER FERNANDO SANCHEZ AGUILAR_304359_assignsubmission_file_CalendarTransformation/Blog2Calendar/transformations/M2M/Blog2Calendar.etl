rule Blog2Calendar
	transform b: Blog!Blog
	to c: Calendar!Calendar{
		"Transforming Blog: ".print();b.name.println();
		c.name = b.name;
		for(category in b.categories){
			"Category: ".print();category.println();
			for(article in category.articles){
				"Article ".print();article.println();
				var year = article.equivalent("Article2Year");
				"Year: ".print(); year.println();
				"Years: ".print(); c.years.println();
				if(c.years.select(y|y.year = year.year).size() > 0){
					year = c.years.select(y|y.year = year.year).first();
				}else{
					c.years.add(year);
				}
				var month = article.equivalent("Article2Month");
				"Month: ".print(); month.println();
				"Months: ".print(); year.months.println();
				if(year.months.select(m|m.month = month.month).size() > 0){
					month = year.months.select(m|m.month = month.month).first();
				}else{
					month.year = year;
					year.months.add(month);
				}
				var day = article.equivalent("Article2Day");
				"Day: ".print(); day.println();
				"Days: ".print(); month.days.println();
				if(month.days.select(d|d.day = day.day).size() > 0){
					day = month.days.select(d|d.day = day.day).first();
				}else{
					day.month = month;
					month.days.add(day);
				}
				var event = article.equivalent("Article2Event");
				event.day = day;
				"Event: ".print(); event.println();
				day.events.add(event);
			}
		}		
	}
	
@lazy
rule Article2Year
	transform a: Blog!Article
	to y: Calendar!Year {
		var date = a.date.split("/");
		y.year = date.at(2).asInteger();
	}

@lazy
rule Article2Month
	transform a: Blog!Article
	to m: Calendar!Month{
		var date = a.date.split("/");
		m.month = date.at(1).asInteger();
	}

@lazy
rule Article2Day
	transform a: Blog!Article
	to d: Calendar!Day{
		var date = a.date.split("/");
		d.day = date.at(0).asInteger();
	}

	
@lazy
rule Article2Event
	transform a: Blog!Article
	to e: Calendar!Event{
		e.event = a.summary;
		e.location = "";
		e.owner = a.author.name;
		e.tags = a.tags.getAllTags();
	}
	
operation OrderedSet getAllTags(){
	return self.tag.concat(", ");
}