package co.edu.uniandes.proyectoautomatizacion.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imagenSliderItemDbDaoConfig;
    private final DaoConfig promocionDbDaoConfig;
    private final DaoConfig productoUbicDbDaoConfig;
    private final DaoConfig ubicacionDbDaoConfig;
    private final DaoConfig productoDbDaoConfig;
    private final DaoConfig categoriaDbDaoConfig;
    private final DaoConfig departamentoDaoConfig;
    private final DaoConfig ciudadDaoConfig;

    private final ImagenSliderItemDbDao imagenSliderItemDbDao;
    private final PromocionDbDao promocionDbDao;
    private final ProductoUbicDbDao productoUbicDbDao;
    private final UbicacionDbDao ubicacionDbDao;
    private final ProductoDbDao productoDbDao;
    private final CategoriaDbDao categoriaDbDao;
    private final DepartamentoDao departamentoDao;
    private final CiudadDao ciudadDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imagenSliderItemDbDaoConfig = daoConfigMap.get(ImagenSliderItemDbDao.class).clone();
        imagenSliderItemDbDaoConfig.initIdentityScope(type);

        promocionDbDaoConfig = daoConfigMap.get(PromocionDbDao.class).clone();
        promocionDbDaoConfig.initIdentityScope(type);

        productoUbicDbDaoConfig = daoConfigMap.get(ProductoUbicDbDao.class).clone();
        productoUbicDbDaoConfig.initIdentityScope(type);

        ubicacionDbDaoConfig = daoConfigMap.get(UbicacionDbDao.class).clone();
        ubicacionDbDaoConfig.initIdentityScope(type);

        productoDbDaoConfig = daoConfigMap.get(ProductoDbDao.class).clone();
        productoDbDaoConfig.initIdentityScope(type);

        categoriaDbDaoConfig = daoConfigMap.get(CategoriaDbDao.class).clone();
        categoriaDbDaoConfig.initIdentityScope(type);

        departamentoDaoConfig = daoConfigMap.get(DepartamentoDao.class).clone();
        departamentoDaoConfig.initIdentityScope(type);

        ciudadDaoConfig = daoConfigMap.get(CiudadDao.class).clone();
        ciudadDaoConfig.initIdentityScope(type);

        imagenSliderItemDbDao = new ImagenSliderItemDbDao(imagenSliderItemDbDaoConfig, this);
        promocionDbDao = new PromocionDbDao(promocionDbDaoConfig, this);
        productoUbicDbDao = new ProductoUbicDbDao(productoUbicDbDaoConfig, this);
        ubicacionDbDao = new UbicacionDbDao(ubicacionDbDaoConfig, this);
        productoDbDao = new ProductoDbDao(productoDbDaoConfig, this);
        categoriaDbDao = new CategoriaDbDao(categoriaDbDaoConfig, this);
        departamentoDao = new DepartamentoDao(departamentoDaoConfig, this);
        ciudadDao = new CiudadDao(ciudadDaoConfig, this);

        registerDao(ImagenSliderItemDb.class, imagenSliderItemDbDao);
        registerDao(PromocionDb.class, promocionDbDao);
        registerDao(ProductoUbicDb.class, productoUbicDbDao);
        registerDao(UbicacionDb.class, ubicacionDbDao);
        registerDao(ProductoDb.class, productoDbDao);
        registerDao(CategoriaDb.class, categoriaDbDao);
        registerDao(Departamento.class, departamentoDao);
        registerDao(Ciudad.class, ciudadDao);
    }
    
    public void clear() {
        imagenSliderItemDbDaoConfig.getIdentityScope().clear();
        promocionDbDaoConfig.getIdentityScope().clear();
        productoUbicDbDaoConfig.getIdentityScope().clear();
        ubicacionDbDaoConfig.getIdentityScope().clear();
        productoDbDaoConfig.getIdentityScope().clear();
        categoriaDbDaoConfig.getIdentityScope().clear();
        departamentoDaoConfig.getIdentityScope().clear();
        ciudadDaoConfig.getIdentityScope().clear();
    }

    public ImagenSliderItemDbDao getImagenSliderItemDbDao() {
        return imagenSliderItemDbDao;
    }

    public PromocionDbDao getPromocionDbDao() {
        return promocionDbDao;
    }

    public ProductoUbicDbDao getProductoUbicDbDao() {
        return productoUbicDbDao;
    }

    public UbicacionDbDao getUbicacionDbDao() {
        return ubicacionDbDao;
    }

    public ProductoDbDao getProductoDbDao() {
        return productoDbDao;
    }

    public CategoriaDbDao getCategoriaDbDao() {
        return categoriaDbDao;
    }

    public DepartamentoDao getDepartamentoDao() {
        return departamentoDao;
    }

    public CiudadDao getCiudadDao() {
        return ciudadDao;
    }

}
