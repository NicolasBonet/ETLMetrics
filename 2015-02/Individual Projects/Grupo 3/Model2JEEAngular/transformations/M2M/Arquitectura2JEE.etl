model mm_arquitectura driver EMF {path='arquitectura.ecore'};
model jee driver EMF {path='jee.ecore'};

rule Sistema2Aplicacion
	transform sistema:mm_arquitectura!Sistema
	to aplicacion:jee!Aplicacion{
		aplicacion.nombre = sistema.proyecto_negocio.nombre;
		for(capa in sistema.proyecto_negocio.capas){
			aplicacion.capas.add(crearCapaJEE(capa));
		}
	}


operation crearCapaJEE(capa:mm_arquitectura!Capa):jee!Capa{
	var resCapa = new jee!Capa();
	resCapa.nombre = capa.nombre;
	var nClases = new Bag;
	if (capa.isTypeOf(mm_arquitectura!CapaEntidad)){
		for (clase in capa.clases){
			var c = crearClaseEntidad(clase,capa.clases,nClases);
			nClases.add(c);
		}
	}else if (capa.isTypeOf(mm_arquitectura!CapaNegocio)){
		for (clase in capa.clases){
			var c = crearClaseEJB(clase);
			nClases.add(c);
		}
	}else if (capa.isTypeOf(mm_arquitectura!CapaServicio)){
		nClases.add(crearClaseConfiguracion());
		for (clase in capa.clases){
			var c = crearClaseServicio(clase);
			nClases.add(c);
		}
	}
	resCapa.clases = nClases;
	return resCapa;
}

operation crearClaseEntidad(clase : mm_arquitectura!Entidad, clases : Collection, nClases : Collection):jee!Entidad{
	var c = new jee!Entidad();
	c.nombre = clase.nombre.replace(" ","");
	
	var anotacion  = new jee!Anotacion();
	anotacion.nombre = "Entity";
	var argumento=new jee!Argumento();
	argumento.nombre="name";
	argumento.valor=clase.nombre.replace(" ","").toLowerCase();
	anotacion.argumentos.add(argumento);
	c.anotaciones.add(anotacion);
	
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Table";
	argumento=new jee!Argumento();
	argumento.nombre="name";
	argumento.valor=clase.nombre.replace(" ","_").toUpperCase();
	anotacion.argumentos.add(argumento);
	c.anotaciones.add(anotacion);
	var relHerencia = clase.relaciones.select(e|e.tipo = mm_arquitectura!ETipoRelacion#HERENCIA and e.destino <> null);
	if (relHerencia.size()=0){
		//Generador de ID
		var a = new jee!Atributo();
		a.nombre = clase.nombre.replace(" ","").firstToLowerCase()+"Id";
		a.tipo = new jee!Primitivo();
		a.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
		c.atributos.add(a);
		var anotacion = new jee!Anotacion();
		anotacion.nombre = "Id";
		a.anotaciones.add(anotacion);
		anotacion = new jee!Anotacion();
		anotacion.nombre = "GeneratedValue";
		var argumento=new jee!Argumento();
		argumento.nombre="strategy";
		argumento.valor="GenerationType.IDENTITY";
		anotacion.argumentos.add(argumento);
		a.anotaciones.add(anotacion);
		anotacion = new jee!Anotacion();
		anotacion.nombre = "Column";
		argumento=new jee!Argumento();
		argumento.nombre="name";
		argumento.valor=clase.nombre.replace(" ","_").toUpperCase()+"_ID";
		anotacion.argumentos.add(argumento);
		a.anotaciones.add(anotacion);
		var nullDestino = clase.relaciones.select(e|e.nombre = null);
		if (nullDestino.size() = 1){
			anotacion = new jee!Anotacion();
			anotacion.nombre = "Inheritance";
			argumento=new jee!Argumento();
			argumento.nombre="strategy";
			argumento.valor="InheritanceType.JOINED";
			anotacion.argumentos.add(argumento);
			c.anotaciones.add(anotacion);
		}
	}else{
		//Herencia
		var herencia = relHerencia.at(0);
		var claseDestino = nClases.select(e|herencia.destino.nombre.replace(" ","").contains(e.nombre)).first();
		if (claseDestino <> null){
			if (claseDestino.anotaciones.select(a|a.nombre = "Inheritance").size()=0){
				anotacion = new jee!Anotacion();
				anotacion.nombre = "Inheritance";
				argumento=new jee!Argumento();
				argumento.nombre="strategy";
				argumento.valor="InheritanceType.JOINED";
				anotacion.argumentos.add(argumento);
				claseDestino.anotaciones.add(anotacion);
			}
			c.extension = "extends "+claseDestino.nombre;
		}else{
			var claseDestino = clases.select(e|herencia.destino.nombre.replace(" ","").contains(e.nombre.replace(" ",""))).first();
			c.extension = "extends "+claseDestino.nombre.replace(" ","");
			//herencia
			var _relacion = new mm_arquitectura!Relacion();
			_relacion.tipo = mm_arquitectura!ETipoRelacion#HERENCIA;
			_relacion.destino = null;
			claseDestino.relaciones.add(_relacion);
		}
	}
	
	for (atributo in clase.atributos){
		var a = new jee!Atributo();
		a.nombre = atributo.nombre.replace(" ","").split("\\(")[0];
		c.atributos.add(a);
		var anotacion  = new jee!Anotacion();
		anotacion.nombre = "Column";
		var argumento=new jee!Argumento();
		argumento.nombre="name";
		argumento.valor=atributo.nombre.split("\\(")[0].replace(" ","_").toUpperCase();
		if (argumento.valor.endsWith("_")){
			argumento.valor = argumento.valor.substring(0,argumento.valor.length()-1);
		}
		anotacion.argumentos.add(argumento);
		a.anotaciones.add(anotacion);
		a.tipo = new jee!Primitivo();
		if (atributo.tipoDato = mm_arquitectura!TipoDato#CadenaTexto){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#STRING;
		}else if (atributo.tipoDato = mm_arquitectura!TipoDato#Entero){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
		}else if (atributo.tipoDato = mm_arquitectura!TipoDato#Numerico){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#DOUBLE;
		}else if (atributo.tipoDato = mm_arquitectura!TipoDato#Fecha){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#DATE;
		}else if (atributo.tipoDato = mm_arquitectura!TipoDato#FechaHora){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#CALENDAR;
		}else if (atributo.tipoDato = mm_arquitectura!TipoDato#Booleano){
			a.tipo.tipoPrimitivo = jee!TipoPrimitivo#BOOLEAN;
		}
		
		//Validaciones
		for (validacion in atributo.validaciones){
			if (atributo.tipoDato = mm_arquitectura!TipoDato#Entero){
				var anotacion  = new jee!Anotacion();
				if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#OBLIGATORIO){
					anotacion.nombre = "NotNull";
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MAYORIGUAL){
					anotacion.nombre = "Min";
					argumento=new jee!Argumento();
					argumento.nombre="value";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MENORIGUAL){
					anotacion.nombre = "Max";
					argumento=new jee!Argumento();
					argumento.nombre="value";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#PATRON){
					anotacion.nombre = "Pattern";
					argumento=new jee!Argumento();
					argumento.nombre="regexp";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}
				a.anotaciones.add(anotacion);
			}else if (atributo.tipoDato = mm_arquitectura!TipoDato#CadenaTexto){
				var anotacion  = new jee!Anotacion();
				if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#IGUAL){
					anotacion.nombre = "Size";
					argumento=new jee!Argumento();
					argumento.nombre="min";
					argumento.valor="0";
					anotacion.argumentos.add(argumento);
					argumento=new jee!Argumento();
					argumento.nombre="max";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#OBLIGATORIO){
					anotacion.nombre = "NotNull";
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MAYORIGUAL){
					anotacion.nombre = "Size";
					argumento=new jee!Argumento();
					argumento.nombre="min";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MENORIGUAL){
					anotacion.nombre = "Size";
					argumento=new jee!Argumento();
					argumento.nombre="max";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#PATRON){
					anotacion.nombre = "Pattern";
					argumento=new jee!Argumento();
					argumento.nombre="regexp";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}
				a.anotaciones.add(anotacion);
			}else{
				var anotacion  = null;
				if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#OBLIGATORIO){
					anotacion = new jee!Anotacion();
					anotacion.nombre = "NotNull";
				}else if (validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#PATRON){
					anotacion = new jee!Anotacion();
					anotacion.nombre = "Pattern";
					argumento=new jee!Argumento();
					argumento.nombre="regexp";
					argumento.valor=validacion.valor;
					anotacion.argumentos.add(argumento);
				}
				if (anotacion <> null){
					a.anotaciones.add(anotacion);
				}
			}
		}
	}
	
	//Relaciones
	for (relacion in clase.relaciones){
		if (relacion.tipo <> mm_arquitectura!ETipoRelacion#HERENCIA){
			if ((relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#CERO or 
					relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#UNO) and 
					relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#MUCHOS){
				//Cero - Uno a muchos
				var a = new jee!Atributo();
				a.nombre = relacion.nombre.toLowerCase();
				a.tipo = new jee!Complejo();
				var claseDestino = clases.select(e|relacion.nombre.toLowerCase().contains(e.nombre.replace(" ","").toLowerCase())).first();
				a.tipo.nombre = "List<"+claseDestino.nombre.replace(" ","")+">"; 
				anotacion = new jee!Anotacion();
				anotacion.nombre = "OneToMany";
				argumento=new jee!Argumento();
				argumento.nombre="mappedBy";
				argumento.valor=c.nombre.toLowerCase();
				anotacion.argumentos.add(argumento);
				a.anotaciones.add(anotacion);
				c.atributos.add(a);
				var claseDestino = nClases.select(e|relacion.nombre.contains(e.nombre.toLowerCase())).first();
				if (claseDestino<>null){
					//Muchos a uno JoinColumn
					var a = new jee!Atributo();
					a.nombre = clase.nombre.replace(" ","").toLowerCase();
					a.tipo = new jee!Complejo();
					a.tipo.nombre = clase.nombre.replace(" ",""); 
					anotacion = new jee!Anotacion();
					anotacion.nombre = "ManyToOne";
					a.anotaciones.add(anotacion);
					anotacion = new jee!Anotacion();
					anotacion.nombre = "JoinColumn";
					argumento=new jee!Argumento();
					argumento.nombre="name";
					argumento.valor=(clase.nombre.replace(" ","_")+"_Id").toUpperCase();
					anotacion.argumentos.add(argumento);
					a.anotaciones.add(anotacion);
					claseDestino.atributos.add(a);
				}else{
					var claseDestino = clases.select(e|relacion.nombre.toLowerCase().contains(e.nombre.replace(" ","").toLowerCase())).first();
					//Muchos a uno
					var _relacion = new mm_arquitectura!Relacion();
					_relacion.nombre = c.nombre;
					_relacion.tipo = mm_arquitectura!ETipoRelacion#AGREGACION;
					_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
					_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO;
					claseDestino.relaciones.add(_relacion);
				}
			}else if (relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#UNO and 
					relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO){
				//Uno - Uno mappedBy
				if (not relacion.nombre.contains("_UNOUNO")){
					var a = new jee!Atributo();
					a.nombre = relacion.nombre.toLowerCase();
					a.tipo = new jee!Complejo();
					var nombreEnt = a.nombre.firstToUpperCase();
					a.tipo.nombre = nombreEnt; 
					anotacion = new jee!Anotacion();
					anotacion.nombre = "OneToOne";
					argumento=new jee!Argumento();
					argumento.nombre="mappedBy";
					argumento.valor=c.nombre.toLowerCase();
					anotacion.argumentos.add(argumento);
					a.anotaciones.add(anotacion);
					c.atributos.add(a);
					
					var claseDestino = nClases.select(e|relacion.nombre.contains(e.nombre)).first();
					if (claseDestino<>null){
						//Uno - Uno JoinColumn
						var a = new jee!Atributo();
						a.nombre = clase.nombre.replace(" ","").toLowerCase();
						a.tipo = new jee!Complejo();
						a.tipo.nombre = clase.nombre.replace(" ",""); 
						anotacion = new jee!Anotacion();
						anotacion.nombre = "OneToOne";
						a.anotaciones.add(anotacion);
						anotacion = new jee!Anotacion();
						anotacion.nombre = "JoinColumn";
						argumento=new jee!Argumento();
						argumento.nombre="name";
						argumento.valor=(clase.nombre.replace(" ","_")+"_Id").toUpperCase();
						anotacion.argumentos.add(argumento);
						a.anotaciones.add(anotacion);
						claseDestino.atributos.add(a);
					}else{
						var claseDestino = clases.select(e|e.nombre.replace(" ","").toLowerCase().contains(relacion.nombre)).first();
						//uno a uno
						var _relacion = new mm_arquitectura!Relacion();
						_relacion.nombre = c.nombre+"_UNOUNO";
						_relacion.tipo = mm_arquitectura!ETipoRelacion#AGREGACION;
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#UNO;
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO;
						claseDestino.relaciones.add(_relacion);
					}
				}else if (relacion.nombre.contains("_UNOUNO")){
					//Uno - Uno JoinColumn
					var nombreClaseDestino = relacion.nombre.split("_UNOUNO")[0]; 
					var claseDestino = clases.select(e|nombreClaseDestino.contains(e.nombre.replace(" ",""))).first();
					var a = new jee!Atributo();
					a.nombre = nombreClaseDestino.toLowerCase();
					a.tipo = new jee!Complejo();
					a.tipo.nombre = claseDestino.nombre.replace(" ",""); 
					anotacion = new jee!Anotacion();
					anotacion.nombre = "OneToOne";
					a.anotaciones.add(anotacion);
					anotacion = new jee!Anotacion();
					anotacion.nombre = "JoinColumn";
					argumento=new jee!Argumento();
					argumento.nombre="name";
					argumento.valor=(claseDestino.nombre.replace(" ","_")+"_Id").toUpperCase();
					anotacion.argumentos.add(argumento);
					a.anotaciones.add(anotacion);
					c.atributos.add(a);
				}
			} else if (relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS and 
					relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#MUCHOS){
				//Muchos a muchos
				if (not relacion.nombre.contains("_MUCHOMUCHO")){
					var a = new jee!Atributo();
					a.nombre = relacion.nombre.toLowerCase();
					a.tipo = new jee!Complejo();
					var claseDestino = clases.select(e|relacion.nombre.toLowerCase().contains(e.nombre.replace(" ","").toLowerCase())).first();
					a.tipo.nombre = "List<"+claseDestino.nombre.replace(" ","")+">"; 
					var nombreEntOrigen = c.nombre.firstToUpperCase();
					anotacion = new jee!Anotacion();
					anotacion.nombre = "ManyToMany";
					a.anotaciones.add(anotacion);
					anotacion = new jee!Anotacion();
					anotacion.nombre = "JoinTable";
					argumento=new jee!Argumento();
					argumento.nombre="name";
					argumento.valor=nombreEntOrigen.toUpperCase()+"_"+claseDestino.nombre.replace(" ","").toUpperCase();
					anotacion.argumentos.add(argumento);
					argumento=new jee!Argumento();
					argumento.nombre="joinColumns";
					argumento.valor="{@JoinColumn(name=\""+clase.nombre.replace(" ","_").concat("_Id").toUpperCase()+"\")}";
					anotacion.argumentos.add(argumento);
					argumento=new jee!Argumento();
					argumento.nombre="inverseJoinColumns";
					argumento.valor="{@JoinColumn(name=\""+claseDestino.nombre.replace(" ","_").concat("_Id").toUpperCase()+"\")}";
					anotacion.argumentos.add(argumento);
					argumento=new jee!Argumento();
					argumento.nombre="uniqueConstraints";
					argumento.valor="@UniqueConstraint(columnNames={\""+clase.nombre.replace(" ","_").concat("_Id").toUpperCase()+"\",\""+claseDestino.nombre.replace(" ","_").concat("_Id").toUpperCase()+"\"})";
					anotacion.argumentos.add(argumento);
					a.anotaciones.add(anotacion);
					c.atributos.add(a);
					var claseDestino = nClases.select(e|relacion.nombre.contains(e.nombre)).first();
					if (claseDestino<>null){
						//Muchos - Muchos mappedBy
						var a = new jee!Atributo();
						a.nombre = clase.nombre.replace(" ","").toLowerCase();
						a.tipo = new jee!Complejo();
						a.tipo.nombre = "List<"+clase.nombre.replace(" ","")+">";  
						anotacion = new jee!Anotacion();
						anotacion.nombre = "ManyToMany";
						argumento=new jee!Argumento();
						argumento.nombre="mappedBy";
						argumento.valor=relacion.nombre.toLowerCase();
						anotacion.argumentos.add(argumento);
						a.anotaciones.add(anotacion);
						claseDestino.atributos.add(a);
					}else{
						var claseDestino = clases.select(e|relacion.nombre.toLowerCase().contains(e.nombre.replace(" ","").toLowerCase())).first();
						//muchos a muchos
						var _relacion = new mm_arquitectura!Relacion();
						_relacion.nombre = c.nombre+"_MUCHOMUCHO";
						_relacion.tipo = mm_arquitectura!ETipoRelacion#AGREGACION;
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
						claseDestino.relaciones.add(_relacion);
					}
				}else if (relacion.nombre.contains("_MUCHOMUCHO")){
					var nombreClaseDestino = relacion.nombre.split("_MUCHOMUCHO")[0];
					var claseDestino = clases.select(e|nombreClaseDestino.toLowerCase().contains(e.nombre.replace(" ","").toLowerCase())).first();
					var a = new jee!Atributo();
					a.nombre = nombreClaseDestino.toLowerCase()+"s";
					a.tipo = new jee!Complejo();
					a.tipo.nombre = "List<"+claseDestino.nombre.replace(" ","")+">"; 
					anotacion = new jee!Anotacion();
					anotacion.nombre = "ManyToMany";
					a.anotaciones.add(anotacion);
					argumento=new jee!Argumento();
					argumento.nombre="mappedBy";
					var rel = claseDestino.relaciones.select(e|e.nombre.contains(c.nombre.replace(" ","").toLowerCase())).first();
					argumento.valor=rel.nombre;
					anotacion.argumentos.add(argumento);
					a.anotaciones.add(anotacion);
					c.atributos.add(a);
				}
			} else if (relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS and 
					(relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO or 
					relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#CERO)){
				var claseDestino = clases.select(e|relacion.nombre.contains(e.nombre)).first();
				var a = new jee!Atributo();
				a.nombre = relacion.nombre.toLowerCase();
				a.tipo = new jee!Complejo();
				a.tipo.nombre = claseDestino.nombre.replace(" ",""); 
				anotacion = new jee!Anotacion();
				anotacion.nombre = "ManyToOne";
				a.anotaciones.add(anotacion);
				anotacion = new jee!Anotacion();
				anotacion.nombre = "JoinColumn";
				argumento=new jee!Argumento();
				argumento.nombre="name";
				argumento.valor=(claseDestino.nombre.replace(" ","_")+"_Id").toUpperCase();
				anotacion.argumentos.add(argumento);
				a.anotaciones.add(anotacion);
				c.atributos.add(a);
			}
		}
	}
	
	return c;
}

operation crearClaseEJB(clase : mm_arquitectura!Entidad):jee!EJB{
	var c = new jee!EJB();
	c.nombre = clase.nombre.replace(" ","")+"EJB";
	c.tipoInterface = jee!TipoInterface#LOCAL;
	
	var anotacion  = new jee!Anotacion();
	anotacion.nombre = "Stateless";
	c.anotaciones.add(anotacion);
	
	anotacion  = new jee!Anotacion();
	anotacion.nombre = c.tipoInterface.toString().toLowerCase().firstToUpperCase();
	var argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=clase.nombre.replace(" ","")+"EJBLocal";
	anotacion.argumentos.add(argumento);
	c.anotaciones.add(anotacion);
	
	//Crear atributo persitencecontext para EJBs
	var atributo = new jee!Atributo();
	atributo.nombre = "entityManager";
	atributo.tipo = new jee!Complejo();
	atributo.tipo.nombre = "EntityManager";
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "PersistenceContext";
	var argumento=new jee!Argumento();
	argumento.nombre="unitName";
	argumento.valor="puProyecto";
	anotacion.argumentos.add(argumento);
	atributo.anotaciones.add(anotacion);
	c.atributos.add(atributo);
	
	//Crear metodos para el ejb CRUD
	//Insertar
	var metodo = new jee!MetodoEJB();
	metodo.nombre = "insertar";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	var parametro = new jee!Parametro();
	parametro.nombre = clase.nombre.replace(" ","").toLowerCase();
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = clase.nombre.replace(" ","");
	metodo.parametros.add(parametro);
	var instruccion = new jee!Instruccion();
	instruccion.valor = atributo.nombre+".persist("+clase.nombre.replace(" ","").toLowerCase()+");";
	metodo.instrucciones.add(instruccion);			
	c.servicios.add(metodo);
	
	//Actualizar
	metodo = new jee!MetodoEJB();
	metodo.nombre = "actualizar";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	parametro = new jee!Parametro();
	parametro.nombre = clase.nombre.replace(" ","").toLowerCase();
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = clase.nombre.replace(" ","");
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return "+atributo.nombre+".merge("+clase.nombre.replace(" ","").toLowerCase()+");";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo();
	metodo.retorno.tipo.nombre = clase.nombre.replace(" ","");
	c.servicios.add(metodo);
	
	//Encontrar todos
	metodo = new jee!MetodoEJB();
	metodo.nombre = "encontrarTodos";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	instruccion = new jee!Instruccion();
	instruccion.valor = "List<"+clase.nombre.replace(" ","")+"> lista = null;";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tTypedQuery<"+clase.nombre.replace(" ","")+"> typedQuery = "+atributo.nombre+".createQuery(\"SELECT t FROM "+clase.nombre.replace(" ","").toLowerCase()+" t \", "+clase.nombre.replace(" ","")+".class);";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tlista = typedQuery.getResultList();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return lista;";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo();
	metodo.retorno.tipo.nombre = "List<"+clase.nombre.replace(" ","")+">";
	c.servicios.add(metodo);
	
	//Encontrar por id
	metodo = new jee!MetodoEJB();
	metodo.nombre = "encontrarPorId";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	parametro = new jee!Parametro();
	parametro.nombre = "id";
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = "Object";
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = clase.nombre.replace(" ","")+" "+clase.nombre.firstToLowerCase().replace(" ","")+" = null;";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+clase.nombre.firstToLowerCase().replace(" ","")+" = "+atributo.nombre+".find("+clase.nombre.replace(" ","")+".class, id);";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return "+clase.nombre.firstToLowerCase().replace(" ","")+";";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo();
	metodo.retorno.tipo.nombre = clase.nombre.replace(" ","");
	c.servicios.add(metodo);
	
	//Remover
	metodo = new jee!MetodoEJB();
	metodo.nombre = "remover";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	parametro = new jee!Parametro();
	parametro.nombre = "id";
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = "Object";
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+clase.nombre.replace(" ","")+" "+clase.nombre.firstToLowerCase().replace(" ","")+" = "+atributo.nombre+".find("+clase.nombre.replace(" ","")+".class, id);";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+atributo.nombre+".remove("+clase.nombre.firstToLowerCase().replace(" ","")+");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	c.servicios.add(metodo);
	
	//Total Registros
	metodo = new jee!MetodoEJB();
	metodo.nombre = "totalRegistros";
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	instruccion = new jee!Instruccion();
	instruccion.valor = "Number cantidadRegistros = new Integer(0);";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tcantidadRegistros = (Number)"+atributo.nombre+".createQuery(\"SELECT COUNT(t) FROM "+clase.nombre.replace(" ","").toLowerCase()+" t \").getSingleResult();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return cantidadRegistros.intValue();";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Primitivo();
	metodo.retorno.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
	c.servicios.add(metodo);
	
	return c;
}


operation crearClaseConfiguracion():jee!Service{
	var s = new jee!Service();
	s.nombre = "RestApp";
	
	var anotacion  = new jee!Anotacion();
	anotacion.nombre = "ApplicationPath";
	var argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor="rest";
	anotacion.argumentos.add(argumento);
	s.anotaciones.add(anotacion);
	
	return s;
}

operation crearClaseServicio(clase : mm_arquitectura!Entidad ):jee!Service{
	var c = new jee!Service();
	c.nombre = clase.nombre.replace(" ","")+"Service";
	
	var anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	var argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=clase.nombre.replace(" ","")+"";
	anotacion.argumentos.add(argumento);
	c.anotaciones.add(anotacion);
	
	//Atributo EJB Local
	var a = new jee!Atributo();
	a.nombre = clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0].concat("EJBLocal");
	a.tipo = new jee!Complejo();
	a.tipo.nombre = clase.nombre.replace(" ","").split("Service")[0].concat("EJBLocal");
	c.atributos.add(a);
	var anotacion = new jee!Anotacion();
	anotacion.nombre = "EJB";
	a.anotaciones.add(anotacion);
	
	//Crear servicis CRUD
	//Encontrar todos
	var metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#GET;
	metodo.produce = jee!TipoFormato#JSON;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	var argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=metodo.recurso+"s";
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "encontrarTodos";
	var instruccion = new jee!Instruccion();
	instruccion.valor = "List<"+clase.nombre.replace(" ","").split("Service")[0]+"> lista = null;";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tlista = "+a.nombre+"."+metodo.nombre+"();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return lista;";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo();
	metodo.retorno.tipo.nombre = "List<"+clase.nombre.replace(" ","")+">";
	c.servicios.add(metodo);
	
	//Encontrar por id
	metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#GET;
	metodo.produce = jee!TipoFormato#JSON;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=metodo.recurso+"/{id}";
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "encontrarPorId";
	var parametro = new jee!Parametro();
	parametro.nombre = "id";
	parametro.tipo = new jee!Primitivo();
	parametro.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = clase.nombre.replace(" ","").split("Service")[0]+" "+clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0]+" = null;";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0]+" = "+a.nombre+"."+metodo.nombre+"(id);";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return "+clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0]+";";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo();
	metodo.retorno.tipo.nombre = clase.nombre.replace(" ","").split("Service")[0];
	c.servicios.add(metodo);
	
	//Insertar
	metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#POST;
	metodo.consume = jee!TipoFormato#JSON;
	metodo.produce = jee!TipoFormato#TEXT;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=metodo.recurso;
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#TEXT){
		argumento.valor="text/plain";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Consumes";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.consume = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "insertar";
	parametro = new jee!Parametro();
	parametro.nombre = clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0];
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = clase.nombre.replace(" ","").split("Service")[0];
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = "String mensaje=\"OK\";";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+a.nombre+"."+metodo.nombre+"("+parametro.nombre+");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tmensaje = \"BAD\";";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return mensaje;";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Primitivo;
	metodo.retorno.tipo.tipoPrimitivo = jee!TipoPrimitivo#STRING;
	c.servicios.add(metodo);
	
	//Actualizar
	metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#PUT;
	metodo.consume = jee!TipoFormato#JSON;
	metodo.produce = jee!TipoFormato#JSON;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=metodo.recurso;
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Consumes";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.consume = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "actualizar";
	parametro = new jee!Parametro();
	parametro.nombre = clase.nombre.replace(" ","").firstToLowerCase().split("Service")[0];
	parametro.tipo = new jee!Complejo();
	parametro.tipo.nombre = clase.nombre.replace(" ","").split("Service")[0];
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+parametro.nombre+" = "+a.nombre+"."+metodo.nombre+"("+parametro.nombre+");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return "+parametro.nombre+";";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Complejo;
	metodo.retorno.tipo.nombre = parametro.tipo.nombre;
	c.servicios.add(metodo);

	//Eliminar
	metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#DELETE;
	metodo.consume = jee!TipoFormato#JSON;
	metodo.produce = jee!TipoFormato#TEXT;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor=metodo.recurso+"/{id}";
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#TEXT){
		argumento.valor="text/plain";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "remover";
	parametro = new jee!Parametro();
	parametro.nombre = "id";
	parametro.tipo = new jee!Primitivo();
	parametro.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
	metodo.parametros.add(parametro);
	instruccion = new jee!Instruccion();
	instruccion.valor = "String mensaje=\"OK\";";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\t"+a.nombre+"."+metodo.nombre+"("+parametro.nombre+");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tmensaje = \"BAD\";";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return mensaje;";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Primitivo;
	metodo.retorno.tipo.tipoPrimitivo = jee!TipoPrimitivo#STRING;
	c.servicios.add(metodo);
		
	//totalRegistros
	metodo = new jee!MetodoServicio();
	metodo.recurso = clase.nombre.replace(" ","").split("Service")[0];
	metodo.peticion = jee!Peticion#GET;
	metodo.produce = jee!TipoFormato#JSON;
	anotacion  = new jee!Anotacion();
	anotacion.nombre = metodo.peticion.toString();
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Path";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	argumento.valor="Cantidad"+metodo.recurso+"s";
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	anotacion  = new jee!Anotacion();
	anotacion.nombre = "Produces";
	argumento=new jee!Argumento();
	argumento.nombre="value";
	if (metodo.produce = jee!TipoFormato#JSON){
		argumento.valor="application/json";
	}
	anotacion.argumentos.add(argumento);
	metodo.anotaciones.add(anotacion);
	metodo.visibilidad = jee!Visibilidad#PUBLIC;
	metodo.nombre = "totalRegistros";
	instruccion = new jee!Instruccion();
	instruccion.valor = "Integer cantidad = 0;";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "try{";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tcantidad = "+a.nombre+"."+metodo.nombre+"();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} catch(Exception e){";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\te.printStackTrace();";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "\tthrow new Exception(\"BAD\");";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "} finally{\n";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "}";
	metodo.instrucciones.add(instruccion);
	instruccion = new jee!Instruccion();
	instruccion.valor = "return cantidad;";
	metodo.instrucciones.add(instruccion);
	metodo.retorno = new jee!Retorno();
	metodo.retorno.tipo = new jee!Primitivo();
	metodo.retorno.tipo.tipoPrimitivo = jee!TipoPrimitivo#INTEGER;
	c.servicios.add(metodo);
	return c;
}