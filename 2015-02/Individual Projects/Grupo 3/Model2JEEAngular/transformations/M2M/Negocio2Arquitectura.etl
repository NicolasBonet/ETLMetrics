rule Negocio2Sistema
	transform proyecto:business!Proyecto
	to sistema:mm_arquitectura!Sistema{
	
		sistema.nombre = proyecto.nombre;
		sistema.dominio = proyecto.nombre;
		
		
		var proyectoWEB = new mm_arquitectura!ProyectoWeb();
		proyectoWEB.nombre = proyecto.nombre + "WEB";
		sistema.proyecto_web = proyectoWEB;
		
		var capaPresentacion  = new mm_arquitectura!CapaPresentacion();
		capaPresentacion.nombre = proyecto.nombre + "WEB";
		
		proyectoWEB.capa_presentacion = capaPresentacion;
		
		var entidadesNegocio = new Bag();
		
		for (entidad in proyecto.entidades){
		
			//entidad
			var _entidad = new mm_arquitectura!Entidad();
			_entidad.nombre = entidad.nombre.toString();
			
			sistema.entidades.add(_entidad);
			
			// atributos de la entidad
			
			for (atributo in entidad.atributos){
				var _atributo = new mm_arquitectura!Atributo();
				_atributo.nombre = atributo.nombre;
				
				if (atributo.tipo = business!ETipoDato#CadenaTexto){
					_atributo.tipoDato = mm_arquitectura!TipoDato#CadenaTexto;
				}else if (atributo.tipo = business!ETipoDato#Entero){
					_atributo.tipoDato = mm_arquitectura!TipoDato#Entero;
				}else if (atributo.tipo = business!ETipoDato#Numerico){
					_atributo.tipoDato = mm_arquitectura!TipoDato#Numerico;
				}else if (atributo.tipo = business!ETipoDato#Fecha){
					_atributo.tipoDato = mm_arquitectura!TipoDato#Fecha;
				}else if (atributo.tipo = business!ETipoDato#FechaHora){
					_atributo.tipoDato = mm_arquitectura!TipoDato#FechaHora;
				}else if (atributo.tipo = business!ETipoDato#Booleano){
					_atributo.tipoDato = mm_arquitectura!TipoDato#Booleano;
				}
				
				_entidad.atributos.add(_atributo);
			}
			
		}
			
			for (entidad in proyecto.entidades){
		
				//entidad
				var _entidad = sistema.entidades.select(e|e.nombre == entidad.nombre).first();
				
				//relaciones entidad
				for (relacion in entidad.relaciones){
				
					var _relacion = new mm_arquitectura!Relacion();
					_relacion.nombre = relacion.nombre;
					
					if ( relacion.tipo == business!ETipoRelacion#Herencia){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#HERENCIA;
					}else if ( relacion.tipo == business!ETipoRelacion#Agregacion){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#AGREGACION;
					}else if ( relacion.tipo == business!ETipoRelacion#Composicion){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#COMPOSICION;
					}
					
					if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Cero){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#CERO;
					}else if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Uno){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#UNO;
					}else if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Muchos){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
					}
					
					if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Cero){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#CERO;
					}else if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Uno){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO;
					}else if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Muchos){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
					}
					
					_relacion.destino = sistema.entidades.select(e|e.nombre == relacion.destino.first().nombre).first();
					
					_entidad.relaciones.add(_relacion);
				}
				entidadesNegocio.add(_entidad);
			}
			
			//Vistas
			
			for (_entidad in sistema.entidades){
			
				//Vista Listar
				var vistaListar = new mm_arquitectura!Vista();
				vistaListar.tipo = mm_arquitectura!ETipoVista#LISTA;
				vistaListar.entidad = _entidad;
				vistaListar.nombre = _entidad.nombre + "Lista";				
				
				capaPresentacion.vistas.add(vistaListar);				
				
				//Vista Detalle
				var vistaDetalle = new mm_arquitectura!Vista();
				vistaDetalle.tipo = mm_arquitectura!ETipoVista#DETALLE;
				vistaDetalle.entidad = _entidad;
				vistaDetalle.nombre = _entidad.nombre + "Detalle";
				capaPresentacion.vistas.add(vistaDetalle);
				
				
			}
			
		//Creacion proyecto negocio
		sistema.proyecto_negocio = new mm_arquitectura!ProyectoNegocio();
		sistema.proyecto_negocio.nombre = proyecto.nombre + "Negocio";
		
		//Creacion capa entidad
		var capa = crearCapa(proyecto.nombre + "Entidad", proyecto.entidades, entidadesNegocio);
		if (capa<>null){
			sistema.proyecto_negocio.capas.add(capa);
		}
		//Creacion capa Negocio
		capa = crearCapa(proyecto.nombre + "Negocio", proyecto.entidades, null);
		if (capa<>null){
			sistema.proyecto_negocio.capas.add(capa);
		}
		//Creacion capa Servicio
		capa = crearCapa(proyecto.nombre + "Servicio", proyecto.entidades, null);
		if (capa<>null){
			sistema.proyecto_negocio.capas.add(capa);
		}
		entidadesNegocio = null;
	}

operation crearCapa(nombreCapa:String, entidades:Collection, entidadesNegocio:Bag):mm_arquitectura!Capa{
	var nClases = new Bag;
	for (entidad in entidades){
		var c = new mm_arquitectura!Entidad();
		c.nombre = entidad.nombre;
		for (atributo in entidad.atributos){
			var a = new mm_arquitectura!Atributo();
			a.nombre = atributo.nombre;
			if (atributo.tipo = business!ETipoDato#CadenaTexto){
				a.tipoDato = mm_arquitectura!TipoDato#CadenaTexto;
			}else if (atributo.tipo = business!ETipoDato#Entero){
				a.tipoDato = mm_arquitectura!TipoDato#Entero;
			}else if (atributo.tipo = business!ETipoDato#Numerico){
				a.tipoDato = mm_arquitectura!TipoDato#Numerico;
			}else if (atributo.tipo = business!ETipoDato#Fecha){
				a.tipoDato = mm_arquitectura!TipoDato#Fecha;
			}else if (atributo.tipo = business!ETipoDato#FechaHora){
				a.tipoDato = mm_arquitectura!TipoDato#FechaHora;
			}else if (atributo.tipo = business!ETipoDato#Booleano){
				a.tipoDato = mm_arquitectura!TipoDato#Booleano;
			}
			if (nombreCapa.endsWith("Entidad")){
				for (v in atributo.validaciones){
					var validacion = new mm_arquitectura!Validacion();
					validacion.nombre = v.nombre;
					validacion.valor = v.valor;
					if (v.tipo = business!ETipoValidacion#Obligatorio){
						validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#OBLIGATORIO;
					}else if (v.tipo = business!ETipoValidacion#Igual){
						validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#IGUAL;
					}else if (v.tipo = business!ETipoValidacion#MayorIgualQue){
						validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MAYORIGUAL;
					}else if (v.tipo = business!ETipoValidacion#MenorIgualQue){
						validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#MENORIGUAL;
					}else if (v.tipo = business!ETipoValidacion#Patron){
						validacion.tipoValidacion = mm_arquitectura!TipoValidacionA#PATRON;
					}
					a.validaciones.add(validacion);
				}
			}
			c.atributos.add(a);
		}
		if (nombreCapa.endsWith("Entidad")){
		
				//relaciones entidad
				for (relacion in entidad.relaciones){
				
					var _relacion = new mm_arquitectura!Relacion();
					_relacion.nombre = relacion.nombre;
					
					if ( relacion.tipo == business!ETipoRelacion#Herencia){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#HERENCIA;
					}else if ( relacion.tipo == business!ETipoRelacion#Agregacion){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#AGREGACION;
					}else if ( relacion.tipo == business!ETipoRelacion#Composicion){
						_relacion.tipo = mm_arquitectura!ETipoRelacion#COMPOSICION;
					}
					
					if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Cero){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#CERO;
					}else if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Uno){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#UNO;
					}else if ( relacion.multiplicidadOrigen == business!ETipoMultiplicidad#Muchos){
						_relacion.multiplicidadOrigen = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
					}
					
					if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Cero){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#CERO;
					}else if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Uno){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#UNO;
					}else if ( relacion.multiplicidadDestino == business!ETipoMultiplicidad#Muchos){
						_relacion.multiplicidadDestino = mm_arquitectura!ETipoMultiplicidad#MUCHOS;
					}
					_relacion.destino = entidadesNegocio.select(e|e.nombre == relacion.destino.first().nombre).first();
					c.relaciones.add(_relacion);					
				}
			
		
			
		}
		nClases.add(c);
	}
	var capa = null;
	if (nombreCapa.endsWith("Entidad")){
		capa = new mm_arquitectura!CapaEntidad();
	}else if (nombreCapa.endsWith("Negocio")){
		capa = new mm_arquitectura!CapaNegocio();
	}else if (nombreCapa.endsWith("Servicio")){
		capa = new mm_arquitectura!CapaServicio();
	}
	
	if (capa<>null){
		capa.nombre = nombreCapa;
		capa.clases = nClases;	
	}
	
	return capa;
}