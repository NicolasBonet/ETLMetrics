/*
* generated by Xtext
*/
grammar InternalConfig;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.uniandes.config2sql.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.uniandes.config2sql.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.uniandes.config2sql.xtext.services.ConfigGrammarAccess;

}

@parser::members {
 
 	private ConfigGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ConfigGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfig
entryRuleConfig 
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigAccess().getGroup()); }
(rule__Config__Group__0)
{ after(grammarAccess.getConfigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionAccess().getGroup()); }
(rule__Connection__Group__0)
{ after(grammarAccess.getConnectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMergedField
entryRuleMergedField 
:
{ before(grammarAccess.getMergedFieldRule()); }
	 ruleMergedField
{ after(grammarAccess.getMergedFieldRule()); } 
	 EOF 
;

// Rule MergedField
ruleMergedField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup()); }
(rule__MergedField__Group__0)
{ after(grammarAccess.getMergedFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getGroup()); }
(rule__AttributeName__Group__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FieldType
ruleFieldType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
(rule__FieldType__Alternatives)
{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'\'String\'' 
)
{ after(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'\'Integer\'' 
)
{ after(grammarAccess.getFieldTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getFloatEnumLiteralDeclaration_2()); }
(	'\'Float\'' 
)
{ after(grammarAccess.getFieldTypeAccess().getFloatEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getArrayEnumLiteralDeclaration_3()); }
(	'\'Array\'' 
)
{ after(grammarAccess.getFieldTypeAccess().getArrayEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_4()); }
(	'\'Boolean\'' 
)
{ after(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Config__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLITERACONFIGTerminalRuleCall_0()); }
	RULE_LITERACONFIG
{ after(grammarAccess.getConfigAccess().getLITERACONFIGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getCOLONTerminalRuleCall_1()); }
	RULE_COLON
{ after(grammarAccess.getConfigAccess().getCOLONTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLEFTPARENTESISTerminalRuleCall_2()); }
	RULE_LEFTPARENTESIS
{ after(grammarAccess.getConfigAccess().getLEFTPARENTESISTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__3__Impl
	rule__Config__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLITERACONNECTIONTerminalRuleCall_3()); }
	RULE_LITERACONNECTION
{ after(grammarAccess.getConfigAccess().getLITERACONNECTIONTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__4__Impl
	rule__Config__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getCOLONTerminalRuleCall_4()); }
	RULE_COLON
{ after(grammarAccess.getConfigAccess().getCOLONTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__5__Impl
	rule__Config__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConnectionAssignment_5()); }
(rule__Config__ConnectionAssignment_5)
{ after(grammarAccess.getConfigAccess().getConnectionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__6__Impl
	rule__Config__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGroup_6()); }
(rule__Config__Group_6__0)?
{ after(grammarAccess.getConfigAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRIGHTPARENTESISTerminalRuleCall_7()); }
	RULE_RIGHTPARENTESIS
{ after(grammarAccess.getConfigAccess().getRIGHTPARENTESISTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Config__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6__0__Impl
	rule__Config__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLITERALMERGEDFIELDSTerminalRuleCall_6_0()); }
	RULE_LITERALMERGEDFIELDS
{ after(grammarAccess.getConfigAccess().getLITERALMERGEDFIELDSTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6__1__Impl
	rule__Config__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLEFTBRACKETTerminalRuleCall_6_1()); }
	RULE_LEFTBRACKET
{ after(grammarAccess.getConfigAccess().getLEFTBRACKETTerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6__2__Impl
	rule__Config__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsAssignment_6_2()); }
(rule__Config__MergeFieldsAssignment_6_2)
{ after(grammarAccess.getConfigAccess().getMergeFieldsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6__3__Impl
	rule__Config__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGroup_6_3()); }
(rule__Config__Group_6_3__0)*
{ after(grammarAccess.getConfigAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRIGHTBRACKETTerminalRuleCall_6_4()); }
	RULE_RIGHTBRACKET
{ after(grammarAccess.getConfigAccess().getRIGHTBRACKETTerminalRuleCall_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Config__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6_3__0__Impl
	rule__Config__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getCOMATerminalRuleCall_6_3_0()); }
	RULE_COMA
{ after(grammarAccess.getConfigAccess().getCOMATerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsAssignment_6_3_1()); }
(rule__Config__MergeFieldsAssignment_6_3_1)
{ after(grammarAccess.getConfigAccess().getMergeFieldsAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getConnectionAction_0()); }
(

)
{ after(grammarAccess.getConnectionAccess().getConnectionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLEFTPARENTESISTerminalRuleCall_1()); }
	RULE_LEFTPARENTESIS
{ after(grammarAccess.getConnectionAccess().getLEFTPARENTESISTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_2()); }
(rule__Connection__Group_2__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__3__Impl
	rule__Connection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_3()); }
(rule__Connection__Group_3__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__4__Impl
	rule__Connection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_4()); }
(rule__Connection__Group_4__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getRIGHTPARENTESISTerminalRuleCall_5()); }
	RULE_RIGHTPARENTESIS
{ after(grammarAccess.getConnectionAccess().getRIGHTPARENTESISTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Connection__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_2__0__Impl
	rule__Connection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLITERALURLTerminalRuleCall_2_0()); }
	RULE_LITERALURL
{ after(grammarAccess.getConnectionAccess().getLITERALURLTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlAssignment_2_1()); }
(rule__Connection__UrlAssignment_2_1)
{ after(grammarAccess.getConnectionAccess().getUrlAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_3__0__Impl
	rule__Connection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLITERALUSERNAMETerminalRuleCall_3_0()); }
	RULE_LITERALUSERNAME
{ after(grammarAccess.getConnectionAccess().getLITERALUSERNAMETerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameAssignment_3_1()); }
(rule__Connection__UsernameAssignment_3_1)
{ after(grammarAccess.getConnectionAccess().getUsernameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__0__Impl
	rule__Connection__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLITERALPASSWORDTerminalRuleCall_4_0()); }
	RULE_LITERALPASSWORD
{ after(grammarAccess.getConnectionAccess().getLITERALPASSWORDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordAssignment_4_1()); }
(rule__Connection__PasswordAssignment_4_1)
{ after(grammarAccess.getConnectionAccess().getPasswordAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__0__Impl
	rule__MergedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
	RULE_LEFTPARENTESIS
{ after(grammarAccess.getMergedFieldAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__1__Impl
	rule__MergedField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_1()); }
(rule__MergedField__Group_1__0)?
{ after(grammarAccess.getMergedFieldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__2__Impl
	rule__MergedField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLITERALFIELDSTerminalRuleCall_2()); }
	RULE_LITERALFIELDS
{ after(grammarAccess.getMergedFieldAccess().getLITERALFIELDSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__3__Impl
	rule__MergedField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLEFTBRACKETTerminalRuleCall_3()); }
	RULE_LEFTBRACKET
{ after(grammarAccess.getMergedFieldAccess().getLEFTBRACKETTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__4__Impl
	rule__MergedField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsAssignment_4()); }
(rule__MergedField__FieldsAssignment_4)
{ after(grammarAccess.getMergedFieldAccess().getFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__5__Impl
	rule__MergedField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_5()); }
(rule__MergedField__Group_5__0)*
{ after(grammarAccess.getMergedFieldAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__6__Impl
	rule__MergedField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRIGHTBRACKETTerminalRuleCall_6()); }
	RULE_RIGHTBRACKET
{ after(grammarAccess.getMergedFieldAccess().getRIGHTBRACKETTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__7__Impl
	rule__MergedField__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLITERALATTRIBUTENAMESTerminalRuleCall_7()); }
	RULE_LITERALATTRIBUTENAMES
{ after(grammarAccess.getMergedFieldAccess().getLITERALATTRIBUTENAMESTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__8__Impl
	rule__MergedField__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLEFTBRACKETTerminalRuleCall_8()); }
	RULE_LEFTBRACKET
{ after(grammarAccess.getMergedFieldAccess().getLEFTBRACKETTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__9__Impl
	rule__MergedField__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_9()); }
(rule__MergedField__AttributeNamesAssignment_9)
{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__10__Impl
	rule__MergedField__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_10()); }
(rule__MergedField__Group_10__0)*
{ after(grammarAccess.getMergedFieldAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__11__Impl
	rule__MergedField__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRIGHTBRACKETTerminalRuleCall_11()); }
	RULE_RIGHTBRACKET
{ after(grammarAccess.getMergedFieldAccess().getRIGHTBRACKETTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRIGHTPARENTESISTerminalRuleCall_12()); }
	RULE_RIGHTPARENTESIS
{ after(grammarAccess.getMergedFieldAccess().getRIGHTPARENTESISTerminalRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__MergedField__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_1__0__Impl
	rule__MergedField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLITERALTABLENAMETerminalRuleCall_1_0()); }
	RULE_LITERALTABLENAME
{ after(grammarAccess.getMergedFieldAccess().getLITERALTABLENAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getTableNameAssignment_1_1()); }
(rule__MergedField__TableNameAssignment_1_1)
{ after(grammarAccess.getMergedFieldAccess().getTableNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_5__0__Impl
	rule__MergedField__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getCOMATerminalRuleCall_5_0()); }
	RULE_COMA
{ after(grammarAccess.getMergedFieldAccess().getCOMATerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsAssignment_5_1()); }
(rule__MergedField__FieldsAssignment_5_1)
{ after(grammarAccess.getMergedFieldAccess().getFieldsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_10__0__Impl
	rule__MergedField__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getCOMATerminalRuleCall_10_0()); }
	RULE_COMA
{ after(grammarAccess.getMergedFieldAccess().getCOMATerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_10_1()); }
(rule__MergedField__AttributeNamesAssignment_10_1)
{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__0__Impl
	rule__AttributeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
	RULE_LEFTPARENTESIS
{ after(grammarAccess.getAttributeNameAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__1__Impl
	rule__AttributeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOldFieldAssignment_1()); }
(rule__AttributeName__OldFieldAssignment_1)?
{ after(grammarAccess.getAttributeNameAccess().getOldFieldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__2__Impl
	rule__AttributeName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getCOMATerminalRuleCall_2()); }
	RULE_COMA
{ after(grammarAccess.getAttributeNameAccess().getCOMATerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__3__Impl
	rule__AttributeName__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldAssignment_3()); }
(rule__AttributeName__FinalFieldAssignment_3)
{ after(grammarAccess.getAttributeNameAccess().getFinalFieldAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getRIGHTPARENTESISTerminalRuleCall_4()); }
	RULE_RIGHTPARENTESIS
{ after(grammarAccess.getAttributeNameAccess().getRIGHTPARENTESISTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
	RULE_LEFTPARENTESIS
{ after(grammarAccess.getFieldAccess().getLEFTPARENTESISTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
(rule__Field__NameAssignment_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getCOMATerminalRuleCall_2()); }
	RULE_COMA
{ after(grammarAccess.getFieldAccess().getCOMATerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_3()); }
(rule__Field__TypeAssignment_3)?
{ after(grammarAccess.getFieldAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRIGHTPARENTESISTerminalRuleCall_4()); }
	RULE_RIGHTPARENTESIS
{ after(grammarAccess.getFieldAccess().getRIGHTPARENTESISTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Config__ConnectionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConnectionConnectionParserRuleCall_5_0()); }
	ruleConnection{ after(grammarAccess.getConfigAccess().getConnectionConnectionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__MergeFieldsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_6_2_0()); }
	ruleMergedField{ after(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__MergeFieldsAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_6_3_1_0()); }
	ruleMergedField{ after(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UrlAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getUrlEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UsernameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getUsernameEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__PasswordAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getPasswordEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__TableNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getTableNameEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getMergedFieldAccess().getTableNameEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__FieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_4_0()); }
	ruleField{ after(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__FieldsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_5_1_0()); }
	ruleField{ after(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__AttributeNamesAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_9_0()); }
	ruleAttributeName{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__AttributeNamesAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_10_1_0()); }
	ruleAttributeName{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__OldFieldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOldFieldEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getAttributeNameAccess().getOldFieldEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__FinalFieldAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldFieldCrossReference_3_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldFieldEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getAttributeNameAccess().getFinalFieldFieldEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAttributeNameAccess().getFinalFieldFieldCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeFieldTypeEnumRuleCall_3_0()); }
	ruleFieldType{ after(grammarAccess.getFieldAccess().getTypeFieldTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_LITERACONFIG : '\'config\'';

RULE_LITERACONNECTION : '\'connection\'';

RULE_LITERALMERGEDFIELDS : '\'mergeFields\':';

RULE_LITERALTABLENAME : '\'tableName\':';

RULE_LITERALFIELDS : '\'fields\':';

RULE_LITERALATTRIBUTENAMES : '\'attributeNames\':';

RULE_LITERALURL : '\'url\':';

RULE_LITERALUSERNAME : '\'username\':';

RULE_LITERALPASSWORD : '\'password\':';

RULE_COLON : ':';

RULE_COMA : ',';

RULE_LEFTPARENTESIS : '{';

RULE_LEFTBRACKET : '[';

RULE_RIGHTBRACKET : ']';

RULE_RIGHTPARENTESIS : '}';

RULE_SINGLEQUOTE : '\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


