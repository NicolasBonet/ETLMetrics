<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:jEE="http://www.example.org/jEE" xmlns:kdm="http://www.eclipse.org/MoDisco/kdm/kdm">
  <jEE:JEE/>
  <jEE:JEE>
    <Ejbs name="ExposicionPerrosEJB">
      <bussinesMethods name="ExposicionPerros" return="void" code="        perros = new ArrayList( );&#xA;"/>
      <bussinesMethods name="darPerros" return="ArrayList&lt;E>" code="        ArrayList copiaLista = new ArrayList( perros );&#xA;        return copiaLista;&#xA;"/>
      <bussinesMethods name="ordenarPorRaza" return="void" code="        for( int i = perros.size( ); i > 0; i-- )&#xA;        {&#xA;            for( int j = 0; j &lt; i - 1; j++ )&#xA;            {&#xA;                Perro p1 = ( Perro )perros.get( j );&#xA;                Perro p2 = ( Perro )perros.get( j + 1 );&#xA;&#xA;                // Si es necesario se deben intercambiar p1 y p2&#xA;                if( p1.compararPorRaza( p2 ) > 0 )&#xA;                {&#xA;                    perros.set( j, p2 );&#xA;                    perros.set( j + 1, p1 );&#xA;                }&#xA;            }&#xA;        }&#xA;        verificarInvariante( );&#xA;"/>
      <bussinesMethods name="ordenarPorNombre" return="void" code="        for( int i = perros.size( ); i > 0; i-- )&#xA;        {&#xA;            for( int j = 0; j &lt; i - 1; j++ )&#xA;            {&#xA;                Perro p1 = ( Perro )perros.get( j );&#xA;                Perro p2 = ( Perro )perros.get( j + 1 );&#xA;&#xA;                // Si es necesario se deben intercambiar p1 y p2&#xA;                if( p1.compararPorNombre( p2 ) > 0 )&#xA;                {&#xA;                    perros.set( j, p2 );&#xA;                    perros.set( j + 1, p1 );&#xA;                }&#xA;            }&#xA;        }&#xA;        verificarInvariante( );&#xA;"/>
      <bussinesMethods name="ordenarPorPuntos" return="void" code="        for( int i = 1; i &lt; perros.size( ); i++ )&#xA;        {&#xA;            Perro porInsertar = ( Perro )perros.get( i );&#xA;            boolean termino = false;&#xA;            for( int j = i; j > 0 &amp;&amp; !termino; j-- )&#xA;            {&#xA;                Perro actual = ( Perro )perros.get( j - 1 );&#xA;                if( actual.compararPorPuntos( porInsertar ) > 0 )&#xA;                {&#xA;                    perros.set( j, actual );&#xA;                    perros.set( j - 1, porInsertar );&#xA;                }&#xA;                else&#xA;                    termino = true;&#xA;            }&#xA;        }&#xA;        verificarInvariante( );&#xA;"/>
      <bussinesMethods name="ordenarPorEdad" return="void" code="        int inicial;&#xA;&#xA;        // En cada iteraci&#xfffd;n se sabe que:&#xA;        // 1. Todos los valores antes de perros[inicial] est&#xfffd;n ordenados por edad&#xA;        // 2. No hay ning&#xfffd;n valor despu&#xfffd;s de perros[inicial-1] que sea menor que perros[inicial-1]&#xA;        // En cada iteraci&#xfffd;n se busca el menor entre perros[inicial] y perros[final] y se ubica en perros[inicial]&#xA;&#xA;        for( inicial = 0; inicial &lt; perros.size( ); inicial++ )&#xA;        {&#xA;            int posicionMenor = inicial;&#xA;            Perro perroMenor = ( Perro )perros.get( inicial );&#xA;&#xA;            // Buscar el perro de menor edad entre inicial y final&#xA;            for( int i = inicial + 1; i &lt; perros.size( ); i++ )&#xA;            {&#xA;                Perro perroPosicion = ( Perro )perros.get( i );&#xA;&#xA;                // El perro de la posici&#xfffd;n actual es menor que el menor encontrado hasta el momento&#xA;                if( perroPosicion.compararPorEdad( perroMenor ) &lt; 0 )&#xA;                {&#xA;                    perroMenor = perroPosicion;&#xA;                    posicionMenor = i;&#xA;                }&#xA;            }&#xA;&#xA;            if( posicionMenor != inicial )&#xA;            {&#xA;                Perro temp = ( Perro )perros.get( inicial );&#xA;                perros.set( inicial, perroMenor );&#xA;                perros.set( posicionMenor, temp );&#xA;            }&#xA;&#xA;        }&#xA;        verificarInvariante( );&#xA;"/>
    </Ejbs>
  </jEE:JEE>
  <jEE:Entity/>
  <jEE:Service/>
  <jEE:Method name="buscarPerro" return="int"/>
  <kdm:Attribute/>
</xmi:XMI>
